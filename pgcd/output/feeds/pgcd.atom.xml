<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Le PGCD</title><link href="/" rel="alternate"></link><link href="/feeds/pgcd.atom.xml" rel="self"></link><id>/</id><updated>2015-01-03T16:00:00+01:00</updated><entry><title>Bonne année 2015 !</title><link href="/bonne-annee-2015.html" rel="alternate"></link><updated>2015-01-03T16:00:00+01:00</updated><author><name>poulos</name></author><id>tag:,2015-01-03:bonne-annee-2015.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;&amp;nbsp; &amp;nbsp;Le PGCD présente ses meilleurs vœux à tous les lecteurs et curieux
qui ont osé s'aventurer par ici ;) Comme d'habitude, on souhaite à tout
le monde une bonne santé et aussi que cette année 2015 vous révèle
encore et toujours plein de surprises et de découvertes !&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;nbsp; &amp;nbsp; En ce début de nouvelle année généralement on se propose de
prendre &amp;nbsp;&amp;quot;des bonnes résolutions&amp;quot; comme on dit. Je vous propose ici de
découvrir pour certains et de redécouvrir pour d'autres un magnifique
texte pas très long, pour lequel j'espère que vous prendrez le temps d'y
jeter un petit coup&amp;nbsp;d’œil. Ce texte nous parle&amp;nbsp;du Simple et de notre
rapport essentiel à lui, et oui le Simple... chose qui a tendance à
perdre toute sa saveur si facilement de nos jours. Alors bien sûr, ce
n'est pas un traité de vertu ou de morale,&amp;nbsp;absolument&amp;nbsp;pas et il ne faut
pas le prendre comme tel, &amp;nbsp;mais simplement&amp;nbsp;un texte qui *pose les
questions*, des questions qui peuvent nous amener à relativiser et dont
tout le monde a besoin sans forcément le savoir. Mais il nous permet
aussi d'apprécier un regard et une écriture poétique sur des choses qui
ne nous sont pas étrangères et dont on fait régulièrement l'expérience :
tout le monde s'est déjà&amp;nbsp;évidemment&amp;nbsp;promené en chemin que ce soit
en&amp;nbsp;famille ou non, à la campagne, à la mer, en foret, à la montagne,
proche de la nature en somme.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;nbsp; &amp;nbsp;Evidemment je n'ai pas choisi ce texte au hasard. Ce texte Intitulé
*Der Feldweg (le chemin de campagne)* a été écrit à l'Automne 1948 par
celui que beaucoup considère comme le plus grand penseur du&amp;nbsp;20ème
siècle&amp;nbsp;: Martin Heidegger. L'histoire raconte que&amp;nbsp;lorsqu'il se trouvait
dans une impasse, Heidegger s'en remettait à une promenade le long de
son chemin en campagne Souabe dans son village natal de Meßkirch
en&amp;nbsp;Bade-Wurtemberg : &amp;quot;*Quand les énigmes se pressaient et qu'aucune
issue ne s'offrait, le chemin de campagne était d'un bon secours.&amp;quot;.*&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bonne lecture !&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_211&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;288&amp;quot;]&lt;a class="reference external" href="https://matlink.fr/PGCD-admin/wp-content/uploads/2015/01/téléchargement.jpg"&gt;&lt;img alt="image0" src="https://matlink.fr/PGCD-admin/wp-content/uploads/2015/01/téléchargement.jpg" /&gt;&lt;/a&gt;
Le chemin de campagne, Messkirch[/caption]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;*Der Feldweg (Le chemin de Campagne), par Martin Heidegger*&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;quot;Il quitte à sa porte le Jardin du Château et court vers les terres
humides d'Ehnried. Par-dessus le mur, les vieux tilleuls du Jardin le
regardent s'éloigner, soit qu'aux environs de Pâques il allonge son
trait clair entre les champs déjà verts et les prairies renaissantes ou
qu'à Noël il disparaisse derrière la première colline parmi les
tourbillons de neige. A partir de la croix, il tourne vers la forêt. À
sa lisière il salue en passant un grand chêne, sous lequel est un banc
tout juste équarri.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Parfois reposait sur le banc tel ou tel des écrits des grands penseurs,
qu'une jeune gaucherie essayait de déchiffrer. Quand les énigmes se
pressaient et qu'aucune issue ne s'offrait, le chemin de campagne était
d'un bon secours. Car, sans rien dire, il conduit nos pas sur sa voie
sinueuse à travers l'étendue de ce pays parcimonieux.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;C'est toujours à nouveau que la pensée, aux prises avec les mêmes
écrits ou avec ses propres problèmes, revient vers la voie que le chemin
trace à travers la plaine. Il demeure, sous les pas, aussi près de celui
qui pense que du paysan qui s'en va faucher aux premières heures du
matin. Plus souvent avec les années le chêne au bord du chemin ramène
nos pensées vers les jeux de l'enfance et les premiers choix. Quand
parfois, au cœur de la forêt, un chêne tombait sous la cognée, mon père
aussitôt partait, traversant futaies et clairières ensoleillées, à la
recherche du stère de bois accordé à son atelier. C'est là, dans son
atelier, qu'il travaillait, attentif et réfléchi, dans les intervalles
de son service à l'horloge de la tour et aux cloches qui, l'une comme
les autres, ont leur relation propre au temps et à la temporalité.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Cependant, dans l'écorce du chêne, les gamins découpaient leurs bateaux
qui, munis d'un banc de rameur et d'un gouvernail, flottaient sur la
rivière Mettenbach ou dans le bassin de l'école. Dans ces jeux, les
grandes traversées arrivaient encore facilement à leur terme et
retrouvaient la rive. La part de rêve qu'elles contenaient demeurait
prise dans le vernis brillant, encore à peine discernable, qui
recouvrait toutes choses. L'espace qui leur était ouvert n'allait pas
plus loin que les yeux et la main d'une mère. Tout se passait comme si
sa sollicitude discrète veillait sur tous les êtres. Ces traversées pour
rire ne savaient rien alors des expéditions au cours desquelles tous les
rivages restent en arrière. Cependant la dureté et la senteur du bois de
chêne commençaient à parler, d'une voix moins sourde, de la lenteur et
de la constance avec lesquelles l'arbre croît. Le chêne lui-même disait
qu'une telle croissance est seule à pouvoir fonder ce qui dure et porte
des fruits&amp;nbsp;; que croître signifie&amp;nbsp;: s'ouvrir à l'immensité du ciel, mais
aussi pousser des racines dans l'obscurité de la terre&amp;nbsp;; que tout ce qui
est vrai et authentique n'arrive à maturité que si l'homme est
disponible à l'appel du ciel le plus haut, mais demeure en même temps
sous la protection de la terre qui porte et produit.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Cela, le chêne le dit toujours au chemin de campagne, qui passe devant
lui sûr de sa direction. Le chemin rassemble ce qui a son être autour de
lui&amp;nbsp;; et, à chacun de ceux qui le suivent, il donne ce qui lui revient.
Les mêmes champs, les mêmes pentes couvertes de prairies font escorte au
chemin de campagne en toute saison, proches de lui d'une proximité
toujours autre. Que la chaîne des Alpes au-dessus des forêts s'efface
dans le crépuscule du soir, que, là ou le chemin se hisse sur une
colline, l'alouette au matin s'élance dans le ciel d'été, que le vent
d'est souffle en tempête de la région du village maternel, que le
bûcheron, à la tombée de la nuit, traîne son fagot vers l'âtre, que le
char de la moisson rentre à la ferme en vacillant dans les ornières du
chemin, que les enfants cueillent les premières primevères au bord des
prés, que tout le long du jour le brouillard promène sur la vallée sa
sombre masse, toujours et de tous côtés c'est le Même qui nous parle
autour du chemin.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Le Simple garde le secret de toute permanence et de toute grandeur. Il
arrive chez les hommes sans préparation, bien qu'il lui faille beaucoup
de temps pour croître et mûrir. Les dons qu'il dispense, il les cache
dans l'inapparence de ce qui est toujours le Même. Les choses à demeure
autour du chemin, dans leur ampleur et leur plénitude, donnent le monde.
Comme le dit le vieux maître Eckhart, auprès de qui nous apprenons à
lire et à vivre, c'est seulement dans ce que leur langage ne dit pas que
Dieu est vraiment Dieu. Mais le chemin ne nous parle qu'aussi longtemps
que des hommes, nés dans l'air qui l'environne, ont pouvoir de
l'entendre. Ils sont les servants de leur origine, mais non les esclaves
de l'artifice. C'est en vain que l'homme par ses plans s'efforce
d'imposer un ordre à la terre, s'il n'est pas ordonné lui-même à l'appel
du chemin. Le danger menace, que les hommes d'aujourd'hui n'aient plus
d'oreille pour lui. Seul leur parvient encore le vacarme des machines,
qu'ils ne sont pas loin de prendre pour la voix même de Dieu. Ainsi
l'homme se disperse et n'a plus de chemin. À qui se disperse le Simple
paraît monotone. La monotonie rebute. Les rebutés autour d'eux ne voient
plus qu'uniformité. Le Simple s'est évanoui. Sa puissance silencieuse
est épuisée.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Le nombre de ceux qui connaissent encore le Simple comme un bien qu'ils
ont acquis diminue sans doute rapidement. Mais partout ces peu nombreux
sont ceux qui resteront. Grâce à la puissance tranquille du chemin de
campagne, ils pourront un jour survivre aux forces gigantesques de
l'énergie atomique, dont le calcul et la subtilité de l'homme se sont
emparés pour en faire les entraves de son œuvre propre.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;La parole du chemin éveille un sens, qui aime l'espace libre et qui, à
l'endroit favorable, s'élève d'un bond au-dessus de l'affliction
elle-même pour atteindre à une sérénité dernière. Celle-ci s'oppose au
désordre qui ne connaît que le travail, à l'affairement qui, recherché
pour lui-même, ne produit que le vide.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Dans l'air, variable avec les saisons, du chemin de campagne prospère
une gaieté qui sait et dont la mine paraît souvent morose. Ce gai savoir
est une sagesse malicieuse. Nul ne l'obtient qui ne l'ait déjà. Ceux qui
l'ont le tiennent du chemin de campagne. Sur sa voie la tempête d'hiver
et le jour de la moisson se croisent, la turbulence vivifiante du
printemps et le déclin paisible de l'automne se rencontrent, l'humeur
joueuse de la jeunesse et la sagesse de l'âge échangent des regards.
Mais tout devient serein dans une harmonie unique, dont le chemin dans
son silence emporte çà et là l'écho.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;La sérénité qui sait est une porte donnant sur l'éternité. Ses battants
tournent sur des gonds, qu'un habile artisan a forgés un jour en partant
des énigmes de l'existence.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Des basses prairies d'Ehnried, le chemin revient au Jardin du Château.
Franchissant une dernière colline, son étroit ruban traverse une
dépression plate, puis arrive aux remparts. Il luit faiblement à la
clarté des étoiles. Derrière le Château se dresse la tour de l'église
Saint-Martin. Avec lenteur, presque avec hésitation, les onze coups de
l'heure s'égrènent et s'effacent dans la nuit. La vieille cloche, aux
cordes de laquelle les garçons ont eu leurs mains rudement chauffées,
tremble sous les coups du marteau, dont nul n'oublie la silhouette
amusante et sombre.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Avec le dernier coup le silence s'approfondit encore. Il s'étend
jusqu'à ceux qui ont été sacrifiés prématurément dans deux guerres
mondiales. Le Simple est devenu encore plus simple. Ce qui est toujours
le Même dépayse et libère. L'appel du chemin de campagne est maintenant
tout à fait distinct. Est-ce l'âme qui parle? est-ce le monde? est-ce
Dieu?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Tout dit le renoncement qui conduit vers le Même. Le renoncement ne
prend pas, mais il donne. Il donne la force inépuisable du Simple. Par
l'appel, en une lointaine Origine, une terre natale nous est rendue.&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://matlink.fr/PGCD-admin/wp-content/uploads/2015/01/95320337.jpg"&gt;&lt;img alt="image1" src="https://matlink.fr/PGCD-admin/wp-content/uploads/2015/01/95320337-300x200.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Poulos&lt;/p&gt;
</summary></entry><entry><title>Faites de votre serveur un proxy pour The Pirate Bay</title><link href="/faites-de-votre-serveur-un-proxy-pour-the-pirate-bay.html" rel="alternate"></link><updated>2014-12-06T13:22:00+01:00</updated><author><name>Matlink</name></author><id>tag:,2014-12-06:faites-de-votre-serveur-un-proxy-pour-the-pirate-bay.html</id><summary type="html">&lt;p&gt;Après la &lt;a class="reference external" href="http://www.numerama.com/magazine/31495-the-pirate-bay-sera-bloque-en-france-avec-ses-miroirs.html"&gt;magnifique nouvelle que nous annonce la
SCPP&lt;/a&gt;,
c'est &lt;a class="reference external" href="https://fr.wikipedia.org/wiki/Effet_Streisand"&gt;l'effet
Streisand&lt;/a&gt;. On peut
penser que ces génies vont nous filtrer tout ce beau petit monde en
tapant dans les DNS (comme l'idée&lt;a class="reference external" href="http://www.linformaticien.com/actualites/id/34237/le-blocage-dns-retenu-par-les-deputes-pour-lutter-contre-le-terrorisme.aspx"&gt;révolutionnaire de la loi Lutte
contre le
terrorisme&lt;/a&gt;).
Dans ce cas, il suffit de créer des centaines voire des milliers de
proxies pour The Pirate Bay qui n'auront donc pas le même nom de
domaine. Ainsi, l'adresse &lt;a class="reference external" href="http://tpb.matlink.fr"&gt;http://tpb.matlink.fr&lt;/a&gt; fera en sorte de
communiquer avec le vrai serveur de TPB, directement via son IP.&lt;/p&gt;
&lt;p&gt;Et pour vous montrer à quel point c'est simple de faire ceci, je vous
explique :&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;pour Nginx : ajouter ce code dans le fichier de déclaration des
serveurs virtuels :&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;pre class="literal-block"&gt;
#The Pirate Bay Proxy
server{
  listen 80;
  listen [::]:80;
  server_name tpb.xxxx.xx; #domaine que l'on souhaite donner au proxy
  location / {
     proxy_pass https://194.71.107.27/;
     proxy_set_header Host thepiratebay.se;
  }
}
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;pour Apache :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;lt;VirtualHost *:80&amp;gt;
    ServerName      tpb.xxx.xx
    ProxyPreserveHost   On
    RequestHeader set Host  thepiratebay.se
    ProxyPass    /  https://194.71.107.27/
    ProxyPassReverse /  https://194.71.107.27/
&amp;lt;/VirtualHost&amp;gt;
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ensuite, il vous suffit de redémarrer votre serveur Nginx/Apache :
&lt;tt class="docutils literal"&gt;/etc/init.d/nginx reload ou /etc/init.d/apache2 reload&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;n'oubliez pas d'ajouter dans votre zone DNS le tpb.xxxx.xx CNAME xxxx.xx
que vous avez mis dans votre fichier de config.&lt;/p&gt;
&lt;p&gt;À vos proxies !&lt;/p&gt;
</summary></entry><entry><title>Autoconfiguration de Thunderbird pour votre serveur mail</title><link href="/autoconfiguration-de-thunderbird-pour-votre-serveur-mail.html" rel="alternate"></link><updated>2014-11-27T19:58:00+01:00</updated><author><name>Matlink</name></author><id>tag:,2014-11-27:autoconfiguration-de-thunderbird-pour-votre-serveur-mail.html</id><summary type="html">&lt;p&gt;Si vous gérez un serveur mail, qu'il soit chez vous ou bien hébergé chez
un fournisseur, vous vous êtes sûrement rendus compte quand vous
configuriez un logiciel de messagerie comme Thunderbird, que vous deviez
rentrer toutes les infos à la main (serveur entrant, serveur sortant,
ports, type de connexion chiffrée, ...). Quand on connaît ces infos, au
final, c'est pas très grave. Le problème est que si nous ne sommes pas
le seul à utiliser notre serveur mail (dans le cas où nous fournissons
une ou plusieurs adresses à d'autres personnes), les autres utilisateurs
ne sont pas forcément avertis concernant la configuration à entrer pour
leur client mail.&lt;/p&gt;
&lt;p&gt;Sachez donc que Thunderbird (que j'utilise et adore) propose un système
d'auto-configuration. En réalité, il procède en plusieurs étapes
(supposons que l'adresse mail est &lt;a class="reference external" href="mailto:foo&amp;#64;example.com"&gt;foo&amp;#64;example.com&lt;/a&gt;):&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;recherche du fichier example.com.xml dans le dossier d'installation
de Thunderbird (&lt;em&gt;dossierinstallation&lt;/em&gt;/isp/example.com.xml exactement)&lt;/li&gt;
&lt;li&gt;recherche du nom de domaine autoconfig.example.com&lt;/li&gt;
&lt;li&gt;recherche &amp;quot;example.com&amp;quot; dans la base de données de Mozilla concernant
les fournisseurs de mail&lt;/li&gt;
&lt;li&gt;recherche de &amp;quot;MX example.com&amp;quot; au niveau du DNS, et pour
mx1.mail.hoster.com, recherche de &amp;quot;hoster.com&amp;quot; dans la base de
données de Mozilla&lt;/li&gt;
&lt;li&gt;essaye de deviner des noms courants (imap.example.com,
smtp.example.com, ...)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Je vais pas détailler chaque point, mais il faut savoir que dès que
Thunderbird trouve une configuration dans l'un des points, il s'arrête
et la propose à l'utilisateur.&lt;/p&gt;
&lt;p&gt;Le premier point n'est pas envisageable car évidement cela requiert que
chaque utilisateur récupère le fichier de configuration et le mette dans
le bon dossier. Le deuxième demande de toucher aux configurations DNS,
choses auxquelles nous n'avons pas toujours accès (et que parfois nous
voulons laisser telles quelles). La troisième demande de faire une
demande à Mozilla pour l'ajouter dans sa base de données, pas pratique
et peut prendre du temps, sachant que Mozilla privilégie les plus gros.&lt;/p&gt;
&lt;p&gt;Il nous reste que la quatrième solution (la cinquième n'en est pas une
car ceci est une recherche des noms courants). Il y a un moyen simple de
proposer l'auto-configuration pour Thunderbird, c'est de placer le
fichier de configuration du client mail à cette adresse :
&lt;a class="reference external" href="http://example.com/.well-known/autoconfig/mail/config-v1.1.xml"&gt;http://example.com/.well-known/autoconfig/mail/config-v1.1.xml&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Et le fichier doit être ainsi :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;lt;clientConfig version=&amp;quot;1.0&amp;quot;&amp;gt;
&amp;lt;emailProvider id=&amp;quot;matlink.fr&amp;quot;&amp;gt;
&amp;lt;domain&amp;gt;matlink.fr&amp;lt;/domain&amp;gt;
&amp;lt;displayName&amp;gt;Messagerie Matlink&amp;lt;/displayName&amp;gt;
&amp;lt;displayShortName&amp;gt;MATLINK&amp;lt;/displayShortName&amp;gt;
&amp;lt;incomingServer type=&amp;quot;imap&amp;quot;&amp;gt;
&amp;lt;hostname&amp;gt;fr.matlink.fr&amp;lt;/hostname&amp;gt;
&amp;lt;port&amp;gt;993&amp;lt;/port&amp;gt;
&amp;lt;socketType&amp;gt;SSL&amp;lt;/socketType&amp;gt;
&amp;lt;username&amp;gt;%EMAILLOCALPART%&amp;lt;/username&amp;gt;
&amp;lt;authentication&amp;gt;plain&amp;lt;/authentication&amp;gt;
&amp;lt;/incomingServer&amp;gt;
&amp;lt;outgoingServer type=&amp;quot;smtp&amp;quot;&amp;gt;
&amp;lt;hostname&amp;gt;fr.matlink.fr&amp;lt;/hostname&amp;gt;
&amp;lt;port&amp;gt;465&amp;lt;/port&amp;gt;
&amp;lt;socketType&amp;gt;SSL&amp;lt;/socketType&amp;gt;
&amp;lt;authentication&amp;gt;plain&amp;lt;/authentication&amp;gt;
&amp;lt;username&amp;gt;%EMAILLOCALPART%&amp;lt;/username&amp;gt;
&amp;lt;/outgoingServer&amp;gt;
&amp;lt;/emailProvider&amp;gt;
&amp;lt;/clientConfig&amp;gt;
&lt;/pre&gt;
&lt;p&gt;en remplaçant bien sûr les données de mon serveur par celles du votre.
Et voilà, les nouveaux comptes pour ce nom de domaine seront
automatiquement configurés pour Thunderbird (et à priori c'est le seul
bon client mail à pouvoir faire ça, avec Outlook de
Microsoft).&lt;a class="reference external" href="https://matlink.fr/PGCD/wp-content/uploads/2014/11/config-found-e1417114453304.png"&gt;&lt;img alt="config-found" src="https://matlink.fr/PGCD/wp-content/uploads/2014/11/config-found-300x199.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://developer.mozilla.org/en-US/docs/Mozilla/Thunderbird/Autoconfiguration"&gt;sources&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>La fondation Bill et Melinda Gates exige la licence CC-BY</title><link href="/fondation-bill-gates-cc-by.html" rel="alternate"></link><updated>2014-11-25T22:17:00+01:00</updated><author><name>Matlink</name></author><id>tag:,2014-11-25:fondation-bill-gates-cc-by.html</id><summary type="html">&lt;p&gt;EDIT : étonnamment, &lt;a class="reference external" href="https://www.nsa.gov/public_info/press_room/2014/nifi_announcement.shtml"&gt;la NSA s'y
met&lt;/a&gt;
! Quelle surprise !&lt;/p&gt;
&lt;p&gt;En voilà un très bonne nouvelle ! D'après le &lt;a class="reference external" href="http://www.gatesfoundation.org/how-we-work/general-information/open-access-policy"&gt;site officiel de la
Fondation Bill &amp;amp; Melinda
Gates&lt;/a&gt;,
dorénavant les recherches financées par la fondation devront être sous
licence Open Access CC-BY.&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;&amp;quot; align=&amp;quot;alignleft&amp;quot; width=&amp;quot;48&amp;quot;]&lt;img alt="image0" src="https://upload.wikimedia.org/wikipedia/commons/thumb/1/11/Cc-by_new_white.svg/48px-Cc-by_new_white.svg.png" /&gt; logo de la
licence CC-BY[/caption]&lt;/p&gt;
&lt;p&gt;Un petit rappel de ce qu'est CC-BY : Creative Commons BY. C'est une
licence libre pour des documents ou des recherches, qui permet à l’œuvre
d'être librement utilisée, à la condition de l'attribuer à l'auteur en
citant son nom.&lt;/p&gt;
&lt;p&gt;Je suis très content de cette nouvelle, cela va permettre de pousser des
recherches plus loin même après qu'elles ne soient plus financées par la
fondation. Selon moi, nous ne réalisons pas assez à quel point les
licences libres sont essentielles de nos jours. Notamment pour les
recherches et les brevets : c'est assez frustrant de savoir que
quelqu'un travail ou a travaillé sur un sujet et qu'au final il n'est
pas exploitable car une putain de licence propriétaire ou un brevet à la
con l'en empêche.&lt;/p&gt;
&lt;p&gt;Enfin bref, tout ça pour dire qu'au final, même si je ne sais pas d'où
leur vient l'idée de faire cet exploit (si quelqu'un a des infos), mais
j'en suis fier. Reste à convaincre d'autres
fondations/organismes/entreprises à le faire maintenant !&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://matlink.fr/PGCD/wp-content/uploads/2014/11/rms.jpg"&gt;&lt;img alt="rms" src="https://matlink.fr/PGCD/wp-content/uploads/2014/11/rms.jpg" /&gt;&lt;/a&gt;Et peut-être qu'un jour nous verrons
Richard Stallman et Bill Gates faire des séminaires ensemble sur le
logiciel libre !&lt;/p&gt;
&lt;p&gt;sources : &lt;a class="reference external" href="http://www.gatesfoundation.org/how-we-work/general-information/open-access-policy"&gt;Fondation Bill &amp;amp; Melinda
Gates&lt;/a&gt;,
&lt;a class="reference external" href="https://fr.wikipedia.org/wiki/Licence_Creative_Commons"&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Auto-hébergement : le retour sur mon parcours (deuxième partie)</title><link href="/auto-hebergement-le-retour-sur-mon-parcours-deuxieme-partie.html" rel="alternate"></link><updated>2014-11-20T22:31:00+01:00</updated><author><name>Matlink</name></author><id>tag:,2014-11-20:auto-hebergement-le-retour-sur-mon-parcours-deuxieme-partie.html</id><summary type="html">&lt;p&gt;De retour pour une deuxième partie concernant mon expérience sur
l'auto-hébergement. Pour ceux qui auraient loupé la &lt;a class="reference external" href="https://matlink.fr/PGCD/auto-hebergement-le-retour-sur-mon-parcours-1/"&gt;première partie, la
voici&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Je vous ai présenté le contexte de l'époque où ça a fait tilt dans ma
tête, j'ai parlé de ma déconnexion du fournisseur de mail Gmail que
j'utilisais à l'époque, et du service de synchronisation Dropbox.&lt;/p&gt;
&lt;p&gt;Après avoir changé de fournisseur de mail, je me suis demandé si je ne
pouvais pas faire ça moi-même chez moi. Car le problème est toujours le
même : on quitte Gmail, c'est cool, nos mails ne sont plus dépouillés
pour en tirer du profit, mais est-ce que le type à qui on fait confiance
en hébergeant nos mails chez lui est vraiment de confiance ? C'est
toujours mieux que Google me dira-t-on. Mais c'est moins bien que de le
faire soit-même quand on en a les compétences, le temps et l'argent. Car
oui, ce sont les trois principaux freins à l'auto-hébergement.&lt;/p&gt;
&lt;p&gt;N'ayant pas des masses de thunes et voulant monter mon propre
hébergement, j'ai décidé d'acheter un &lt;a class="reference external" href="http://www.raspberrypi.org/"&gt;Raspberry
Pi.&lt;/a&gt;J'avais entendu parlé de ce petit
bijou quelques temps auparavant et je voyais ça plutôt comme un gadget.
Mais les gens en parlaient de plus en plus, donnant aussi de plus en
plus d'idées de choses à faire avec, allant du simple hébergement de
mail à la vidéosurveillance avec une caméra. Ce qui est bien avec un
Rpi, c'est qu'il est petit (de la taille d'une carte de crédit), est
très simpliste ce qui donne un prix très raisonnable (compter 40/50€
pour le rpi + alimentation + la carte SD pour y mettre le système).&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;&amp;quot; align=&amp;quot;alignleft&amp;quot; width=&amp;quot;130&amp;quot;]&lt;img alt="image0" src="https://upload.wikimedia.org/wikipedia/commons/d/d9/Postfix-logo.png" /&gt; Emblème de
Postfix[/caption]&lt;/p&gt;
&lt;p&gt;J'ai patienté des jours et des jours impatiemment avant de le recevoir,
et une fois arrivé à destination, je me suis empressé de le démarrer et
d'y installer des serveurs mail. Je vous avoue que c'est pas simple en
premiers lieux : les services (tels
&lt;a class="reference external" href="https://fr.wikipedia.org/wiki/Postfix"&gt;Postfix&lt;/a&gt;,
&lt;a class="reference external" href="https://fr.wikipedia.org/wiki/Dovecot"&gt;dovecot&lt;/a&gt; ...) sont tellement
configurables et puissants qu'on s'y perd. Heureusement des tonnes de
tutoriels et de documentations sont disponibles partout sur le net et
c'est ce qui fait le charme de ces services (notamment Postfix).&lt;/p&gt;
&lt;p&gt;Cependant je n'étais pas assez confirmé pour m'en servir comme serveur
mail principal. Cela demande de la sauvegarde régulière (car si le
serveur plante ou se fait attaquer, il faut pouvoir récupérer les
mails), et il faut bien configurer le serveur Postfix pour ne pas
atterrir dans les spams des boites mail. Mais voilà j'utilisais de plus
en plus souvent pour m'inscrire sur des nouveaux sites web par exemple.&lt;/p&gt;
&lt;p&gt;Ce qui m'a intéressé ensuite c'était de monter un petit blog pour
raconter un peu tout ça et mon intéressement pour l'informatique ainsi
que l'univers du logiciel libre. Le collègue Poulos m'a fait part de son
envie de créer un blog pour le PGCD, le groupe qui à la base était sur
Facebook (que j'ai quitté en même temps que Gmail). Le problème est que
sur Facebook, les personnes lisent les notifications et nous ne savions
pas qui était vraiment intéressé par ce que nous publiions. Alors que
sur un blog, les commentaires peuvent nous faire avancer et
paradoxalement, je trouve que c'est plus facile pour communiquer via un
blog plutôt qu'avec un groupe Facebook. Au moins ici, nous avons notre
petit espace à nous. C'est là qu'est né le blog du PGCD.&lt;/p&gt;
&lt;p&gt;Pour en revenir au Raspberry Pi, je pense que c'est le bon plan pour
répondre à 1 des 3 problèmes de l'auto-hébergement : l'argent. Cette
petite machine consomme environ 3 Watts, ce qui représente grosso modo
3€ par an sur votre facture d'électricité. Plus de raison de dire que
l'auto-hébergement nuit à la planète et à l'écologie dans ce cas !&lt;/p&gt;
&lt;p&gt;Je vous parlerai dans le prochain billet de comment
s'auto-héberger dans le cas où si nous n'y connaissons pas grand chose
en administration système avec un projet :
&lt;a class="reference external" href="https://yunohost.org/#"&gt;Yunohost&lt;/a&gt;.&lt;/p&gt;
</summary></entry><entry><title>Pirate Radio : transformez votre Raspberry Pi en émetteur radio</title><link href="/rpirate-radio.html" rel="alternate"></link><updated>2014-11-16T17:05:00+01:00</updated><author><name>Matlink</name></author><id>tag:,2014-11-16:rpirate-radio.html</id><summary type="html">&lt;p&gt;Depuis que j'ai ce joujou de &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Raspberry_Pi"&gt;raspberry
pi&lt;/a&gt;, je ne cesse de
chercher à le bidouiller pour donner des choses marrantes.&lt;/p&gt;
&lt;p&gt;Et je suis tombé sur un article décrivant comment bidouiller son RPI
pour en faire une radio.
&amp;lt;&lt;a class="reference external" href="http://makezine.com/projects/make-38-cameras-and-av/raspberry-pirate-radio/"&gt;http://makezine.com/projects/make-38-cameras-and-av/raspberry-pirate-radio/&lt;/a&gt;&amp;gt;`__&lt;/p&gt;
&lt;p&gt;Il faut savoir que le RPI (modèle A et B) possède 26 pins GPIO
permettant de contrôler un module externe ou de recevoir des
informations. Avec un petit bout de code (en Python ou autre), il est
alors possible par exemple d'allumer une LED, faire tourner un moteur,
recevoir un signal quand on appuie sur un bouton, ... Les usages sont
multiples et infinis.&lt;/p&gt;
&lt;p&gt;Dans cet article, je vais vous montrer comment j'ai moi-même fait pour
faire fonctionner mon RPI en mode radio, car j'ai certaines choses à
rajouter concernant l'installation de base.&lt;/p&gt;
&lt;p&gt;Tout d'abord on se connecte en SSH sur la raspberry, et une fois dessus,
on va récupérer le script Python qui permet de lancer la radio :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;on installe git si c'est pas déjà fait :
&lt;tt class="docutils literal"&gt;sudo &lt;span class="pre"&gt;apt-get&lt;/span&gt; install git&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;ensuite, ffmpeg pour lire les fichiers de musique :
&lt;tt class="docutils literal"&gt;sudo &lt;span class="pre"&gt;apt-get&lt;/span&gt; install ffmpeg&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;config-parser pour lire les fichiers de configuration :
&lt;tt class="docutils literal"&gt;sudo &lt;span class="pre"&gt;apt-get&lt;/span&gt; install &lt;span class="pre"&gt;python-pip&lt;/span&gt; &amp;amp;&amp;amp; sudo pip install configparser&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;on créer un dossier pour la radio :
&lt;tt class="docutils literal"&gt;sudo mkdir ∕pirateradio/ &amp;amp;&amp;amp; cd /pirateradio/&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;on récupère les scripts python de la radio :
&lt;tt class="docutils literal"&gt;git clone &lt;span class="pre"&gt;https://github.com/Make-Magazine/PirateRadio&lt;/span&gt; ./&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;on modifie le fichier Python pour renseigner notre dossier :
&lt;tt class="docutils literal"&gt;sudo sed &lt;span class="pre"&gt;-i&lt;/span&gt; &lt;span class="pre"&gt;'s&amp;#64;/root/pifm&amp;#64;/pirateradio/pifm&amp;#64;g'&lt;/span&gt; /pirateradio/PirateRadio.py&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;on ouvre le fichier de configuration et on y met nos paramètres :
&lt;tt class="docutils literal"&gt;sudo nano pirateradio.conf&lt;/tt&gt;&lt;ul&gt;
&lt;li&gt;frequency : la fréquence sur laquelle émettre la musique&lt;/li&gt;
&lt;li&gt;shuffle : True pour activer la lecture aléatoire, False sinon&lt;/li&gt;
&lt;li&gt;repeat_all : True si vous voulez jouer en boucle les musiques&lt;/li&gt;
&lt;li&gt;stereo_playback : pour activer ou non le stéréo&lt;/li&gt;
&lt;li&gt;music_dir : le répertoire où se trouvent vos musiques&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Vous copiez ensuite vos musiques dans le répertoire que vous avez
indiqué dans le fichier de configuration. Après ça, il vous faut trouver
un fil métallique afin de faire antenne. Pour ma part, j'ai récupéré le
câble d'un appareil qui ne fonctionnait plus. Vous devez le brancher sur
votre RPI sur le GPIO 4 (le pin 7) comme sur la photo ci dessus :&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_147&amp;quot; align=&amp;quot;aligncenter&amp;quot;
width=&amp;quot;300&amp;quot;] Cliquez pour agrandir[/caption]&lt;/p&gt;
&lt;p&gt;Il vous reste ensuite plus qu'à lancer la radio avec la commande
`` python /pirateradio/PirateRadio.py``&lt;/p&gt;
&lt;p&gt;J'ai créé un script shell pour installer tout ça automatiquement,
disponible ici :&lt;a class="reference external" href="https://github.com/matlink/rpi-radio"&gt;https://github.com/matlink/rpi-radio&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://makezine.com/projects/make-38-cameras-and-av/raspberry-pirate-radio/"&gt;source&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Auto-hébergement : le retour sur mon parcours ( première partie)</title><link href="/auto-hebergement-le-retour-sur-mon-parcours-1.html" rel="alternate"></link><updated>2014-11-15T13:49:00+01:00</updated><author><name>Matlink</name></author><id>tag:,2014-11-15:auto-hebergement-le-retour-sur-mon-parcours-1.html</id><summary type="html">&lt;p&gt;Cela fait déjà quasiment un an que je m'auto-héberge et c'est à cette
occasion que j'aimerai partager l'expérience que j'ai acquis au cours de
cette progressive migration.&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_121&amp;quot; align=&amp;quot;alignright&amp;quot;
width=&amp;quot;180&amp;quot;]&lt;a class="reference external" href="https://matlink.fr/PGCD/wp-content/uploads/2014/11/1984-Big-google.jpg"&gt;&lt;img alt="1984-Big-google" src="https://matlink.fr/PGCD/wp-content/uploads/2014/11/1984-Big-google.jpg" /&gt;&lt;/a&gt; Big Google is watching you - Parodie de
Big brother is watchingyou (1984, Georges Orwell)[/caption]&lt;/p&gt;
&lt;p&gt;Un bref rappel du contexte de l'époque : j'avais une adresse mail en
&amp;#64;gmail.com, utilisais
&lt;a class="reference external" href="https://korben.info/7-millions-comptes-dropbox-nature-faut-il-flipper.html"&gt;Dropbox&lt;/a&gt;
pour synchroniser mes fichiers, conservais tout mes contacts de mon
téléphone Android sur mon compte Google, me servais de Google docs pour
rédiger des documents collaboratifs, ... Bref, beaucoup de Google ou de
privateur quoi ! Le problème avec ces services, vous le savez tous,
c'est qu'ils se font de l'argent avec leurs clients ( vous me direz
&amp;quot;Mais on est des utilisateurs, pas des clients !&amp;quot;. Que vous êtes naïfs
!). Comment ? Google par exemple (quel bel exemple !), lit chaque e-mail
que vous envoyez ou recevez, et en récupère les mots clés. Grâce à ces
mots clés, il vous cible de publicités ayant un rapport avec ces mots.
Si vous dites à votre patron par e-mail que vous aimez le fromage à
raclette, Google vous proposera de la pub pour du fromage à raclette.
Petite anecdote : je me rappelle d'une fois où un ami à moi cherchait de
la&lt;a class="reference external" href="https://fr.wikipedia.org/wiki/Sauce_sriracha"&gt;sauce piquante&lt;/a&gt;
sur le moteur de recherche Google (via son ordiphone) et il tombe sur la
page d'un magasin qui en vendait. Le temps passe et dans l'après-midi,
il consulte son compte Facebook (via un ordinateur en libre service) et
aperçoit que sur la droite, à l'emplacement des publicités, la sauce
pimentée qu'il avait cherchée la matin même était affichée avec le
magasin même sur lequel il était tombé. Ici un bel exemple concret de ce
que cela représente.&lt;/p&gt;
&lt;p&gt;Je sais par expérience qu'il n'est pas facile de se passer de ce genre
de services, parce que &amp;quot;ça marche&amp;quot;. C'est vrai, on va pas se le cacher,
Google est fonctionnel. Je vais sur Gmail, et pouf, ma boîte est là,
j'ai pas besoin d'attendre. Tout est centralisé, et j'ai besoin d'un
seul compte pour tous les services qu'offre Google. En contrepartie,
j'offre ma vie privée à cette entreprise. A quoi bon,&lt;a class="reference external" href="http://www.internetactu.net/2010/05/21/lettre-ouverte-a-ceux-qui-nont-rien-a-cacher/"&gt;je n'ai rien à
cacher au
final&lt;/a&gt;
!&lt;/p&gt;
&lt;p&gt;C'est en étant sensibilisé à tous ces problèmes de vie privée et de
monétisation de ma vie sur Internet que j'ai décidé d'agir. J'ai donc en
premier lieu changé d'adresse e-mail pour délaisser celle en &amp;#64;gmail.com.
J'ai trouvé un &lt;a class="reference external" href="https://www.openmailbox.org/"&gt;super fournisseur de
mail&lt;/a&gt;. Le type qui gère ça est
français, ne se fait pas d'argent du tout sur les services qu'il offre,
et propose même un service de &lt;a class="reference external" href="https://owncloud.org/"&gt;cloud&lt;/a&gt;. Pour
faire tourner tous ces services, il fait chaque année une campagne
d'appel aux dons. J'ai par la suite envoyé un mail à tous mes contacts
gmail pour les prévenir que je n'utiliserai plus celle-ci dorénavant et
qu'ils pouvaient me joindre sur la nouvelle, tout en leur expliquant mon
choix. Vu que ce fournisseur proposait aussi le cloud, je n'avais plus
aucune raison d'utiliser Dropbox, alors j'ai arrêter de vraiment
l'utiliser. Je l'ai d'ailleurs complètement supprimé quand j'ai appris
que des comptes avaient fuité récemment.&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;&amp;quot; align=&amp;quot;alignleft&amp;quot; width=&amp;quot;228&amp;quot;]&lt;img alt="image1" src="https://upload.wikimedia.org/wikipedia/commons/thumb/b/b6/OwnCloud2-Logo.svg/595px-OwnCloud2-Logo.svg.png" /&gt; Logo du logiciel
de synchronisation Owncloud[/caption]&lt;/p&gt;
&lt;p&gt;Ce qui est bien avec ownCloud, c'est qu'il grandit tous les jours et
corrige des failles de sécurité sans cesse. Ce logiciel est prometteur
et est une alternative libre de taille au logiciel privateur Dropbox.
Chacun peut l'installer chez soit ou utiliser un serveur sur Internet.
Plus besoin de tout mettre au centre sur un seul serveur. C'est ainsi
plus difficile pour des pirates par exemple, de récupérer l'ensemble des
comptes des utilisateurs d'ownCloud, parce qu'il faudrait attaquer tout
les serveurs ownCloud du monde. Alors que pour Dropbox, y'en a qu'un
seul ! De plus, Owncloud propose un service de
&lt;a class="reference external" href="https://fr.wikipedia.org/wiki/WebDAV"&gt;WebDAV&lt;/a&gt;, cela permet de
synchroniser vos contacts, vos calendrier, vos photos, ... Comme ça,
plus besoin d'utiliser la synchronisation de contact Android de Google,
il suffit de &lt;a class="reference external" href="http://doc.owncloud.org/server/6.0/user_manual/pim/contacts.html"&gt;configurer son téléphone pour utiliser celui du serveur
ownCloud&lt;/a&gt;
!&lt;/p&gt;
&lt;p&gt;Ceci n'est qu'une première étape, et pour le moment vous voyez que n'ai
rien auto-hébergé. Mais c'est l'étape la plus difficile : abandonner nos
petites habitudes pour la bonne santé de notre vie privée sur Internet.
Si vous arrivez à faire ça, vous avez fait un grand pas. Le reste n'est
rien à côté.&lt;/p&gt;
&lt;p&gt;Si certains d'entre vous veulent partager leur expérience sur le même
thème, contactez-moi si vous le voulez, je suis ouvert à toute
discussion et ça m'intéresse.&lt;/p&gt;
</summary><category term="auto hébergement"></category><category term="experience"></category></entry><entry><title>LED : Éclairer l'avenir</title><link href="/led-eclairer-lavenir.html" rel="alternate"></link><updated>2014-11-12T22:02:00+01:00</updated><author><name>Matlink</name></author><id>tag:,2014-11-12:led-eclairer-lavenir.html</id><summary type="html">&lt;p&gt;Bonjour à tous ! Pour cet article j'ai choisi de vous parler d'une
solution pour l'éclairage de demain, sujet qui pourrait bien vous
intéresser ! C'est vrai après tout ça. Comment pourrait-on vivre sans
lumière à portée de main, sans une source qui, bien orientée et avec des
propriétés optiques adéquates, permet de rendre nos soirées si
particulières, nous permet d'apprécier formes et beautés d'un monument
historique de nuit, une œuvre d'art dans un musée. Oui l'éclairage c'est
ce qui manifeste à nous le monde qui nous entoure et c'est bien pour
cela que nous devons en prendre soin et l'adapter au mieux avec les
besoins de nos sociétés en évolution.&lt;/p&gt;
&lt;p&gt;Je décide donc de vous parler des LED (Light Emitting
Diode) ou DEL, en français les fameuses diodes électroluminescentes que
vous avez sûrement vues en cours de physique au collège. Ce petit
miracle semi-conducteur ne repose sur rien d'autre que sur une émission
de lumière lorsqu'il est parcouru par un courant. Ces LED qui sont
encore peu connues du consommateur et de l'acheteur par manque
d'information, de connaissances, de normes et de critères de qualités
clairs sont en passe de changer la donne dans les années à venir en
terme de qualité d'éclairage d'économie et d'environnement.&lt;/p&gt;
&lt;p&gt;En effet, les conférences du ForumLED 2013 qui font état du marché de la
LED ont fait le constat suivant&amp;nbsp;: Aujourd'hui 20% de l'électricité
consommée dans le monde est due à l'éclairage (14% en Europe) et la
consommation pourrait être réduite à 12% d'ici à 2050&amp;nbsp;. Par ailleurs,
l'éclairage représente aussi 6% des émissions de CO2 dans le monde.
Ainsi, supprimer les éclairages types lampes à incandescence et
standardiser de plus en plus les protocoles d'optimisation de
l'éclairage (détecteur de présence allumage/extinction automatique,
variateurs commandés par la lumière du jour, des meilleurs optiques etc)
c'est-à-dire adapter l'éclairage à l'utilisateur pourrait bien être d'un
grand secours pour l'économie mondiale et le problème de l'effet de
serre.&lt;/p&gt;
&lt;p&gt;Le programme des Nations-Unis &lt;em&gt;en.lighten&lt;/em&gt; a pour objectif
de remplacer les lampes à incandescence par des LED partout dans le
monde pour 2015 avec en priorité les pays en voie de développement pour
cible. La mise en place de normes minimales de performance énergétique
et une gestion de la transition respectueuse pour l'environnement
pourrait mener à de véritables économies d'énergie. Cela impliquerait
par exemple des limitations de construction de centrales électriques
diminuant ainsi le risque de &lt;em&gt;blackout.&lt;/em&gt;&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;Cependant, aujourd'hui un quart de la population&lt;/dt&gt;
&lt;dd&gt;mondiale n'a pas accès à un réseau public d'électricité. De fait,
l’association GOGLA tend à promouvoir le «&amp;nbsp;off-grid&amp;nbsp;», l'éclairage
hors réseau, autonome, qui permet à ces populations de s'éclairer
économiquement de façon nomade. L'idée repose sur des lampes à LED qui
peuvent s'assembler et s'installer facilement possédant une batterie
type lithium-ion avec comme source d'électricité un panneau solaire.
Le top en la matière peuvent aller jusqu'à recharger (port USB) un
téléphone, ce qui peut intéresser les populations isolées d'Afrique
qui se sont très vite équipées en téléphones portables, à opter pour
«&amp;nbsp;la lampe SSL&amp;nbsp;». Même si l'industrie voit en grand avec des systèmes
qui permettraient d'alimenter Radio/TV, ventilateurs, etc seuls
quelques PME commencent vraiment à s'intéresser à ce marché propre à
la LED afin d'atteindre ces utilisateurs isolés.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Par ailleurs même les musées pour qui l'éclairage est le point le plus
délicat et important, ne voient qu du bon dans l'éclairage LED. Avec un
rendu de couleur élevé (&amp;gt;90) ré haussant ainsi la qualité visuelle de
l’œuvre (bon accord avec le facteur de réflexion des pigments utilisés
dans les peintures), un spectre continu sans émission d'ultraviolet et
infrarouge réduisant ainsi les risques d'altérer les œuvres et avec un
éclairage uniforme (de 50 à 100 lux quelque soit le point sur l’œuvre)
réduisant la consommation, le nouvel éclairage LED vient d'être approuvé
fin 2013 afin d'éclairer la chapelle Sixtine. La chapelle Sixtine étant
actuellement éclairée au plafond et au sol par des spots halogènes, il
est relativement peu évident de procéder à des remplacement ou des
nettoyages. Le seul bémol sera de modifier la climatisation afin de
dissiper la chaleur produite par les LED. Mais la flexibilité et la
discrétion d'un éclairage LED fait l'unanimité.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://matlink.fr/PGCD/wp-content/uploads/2014/11/chappelle_led.jpg"&gt;&lt;img alt="?????????????" src="https://matlink.fr/PGCD/wp-content/uploads/2014/11/chappelle_led-300x196.jpg" /&gt;&lt;/a&gt;Au final, l'éclairage LED même s'il est peu coûteux et
possède de nombreux atouts pour améliorer le quotidien des personnes
n'en est encore qu'à ses débuts et a du chemin à parcourir en terme de
recherche &amp;amp; développement, de normalisation et de communication avant
d'inonder d'éclat nos avions, automobiles, nos routes et nos villes.
Mais pour sur, le développement de l'éclairage LED s'inscrit
parfaitement dans le débat de la transition énergétique et il en va du
bon sens de le prendre en considération afin d'amorcer un virage
économique et écologique.&lt;/p&gt;
&lt;p&gt;Poulos&lt;/p&gt;
</summary></entry><entry><title>Migration du serveur</title><link href="/migration-du-serveur.html" rel="alternate"></link><updated>2014-11-08T18:56:00+01:00</updated><author><name>Matlink</name></author><id>tag:,2014-11-08:migration-du-serveur.html</id><summary type="html">&lt;p&gt;Cela faisait un moment qu'on avait rien posté ici, c'est vrai ! Mais
bon, on va dire que c'est la faute des vacances !&lt;/p&gt;
&lt;p&gt;Juste un court article pour vous dire que j'ai migré l'ensemble des
services sur un nouveau serveur, avec plus de RAM, plus de disque et
plus de CPU ! Le raspberry pi qui m'hébergeait tout ça ne répondait plus
à mes besoins ! Trop lent, surtout pour un blog avec Wordpress. Là ça
tourne beaucoup mieux, et on va pouvoir l'ouvrir à l'Internet, l'indexer
sur les moteurs de recherches (si on pouvait éviter
&lt;a class="reference external" href="https://korben.info/comment-google-livre-tete-d-une-activiste-aux-islamistes.html"&gt;Google&lt;/a&gt;)
...&lt;/p&gt;
&lt;p&gt;Pour ceux que ça intéresse d'avoir quelques services, sachez que je vous
propose si vous le souhaiter d'héberger vos mails, vos fichiers (avec
&lt;a class="reference external" href="https://owncloud.org/"&gt;Owncloud&lt;/a&gt;, un clone de Dropbox en libre), des
e-mails jetables avec
&lt;a class="reference external" href="https://korben.info/creez-votre-propre-serveur-demails-jetables.html"&gt;EmailPoubelle&lt;/a&gt;,
un service de chat (XMPP) avec Metronome, un serveur mumble et plus
encore. Si certaines choses vous intéressent, ou que vous voudriez que
j'ajoute des services, envoyez moi un mail à matlink[at]matlink.fr.
Sachez quand même que je n'ai pas une connexion d'entreprise, alors
n'espérez pas avoir un débit de malade depuis mon serveur. Mais bon,
entre choisir d'héberger ses mails chez Google, Orange, Yahoo et tout
ces géants, et les faire héberger par quelqu'un qu'on connaît, je pense
que le choix est rapidement fait. La confiance, c'est important, surtout
en ces temps.&lt;/p&gt;
&lt;p&gt;J'en profite que vous soyez là pour vous parler d'un projet mis en place
par &lt;a class="reference external" href="http://www.framasoft.net/"&gt;Framasoft&lt;/a&gt;, &lt;a class="reference external" href="http://degooglisons-internet.org/"&gt;Dégooglisons
Internet.&lt;/a&gt; Le but est de, pour
chaque service que Google propose, d'en avoir un qui fait la même chose,
avec des logiciels libres. Je vous invite à faire un don, c'est
important d'avoir des alternatives à Google.&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;382&amp;quot;]&lt;a class="reference external" href="http://degooglisons-internet.org/img/carte-full.jpg"&gt;&lt;img alt="Degooglisons Internet" src="http://degooglisons-internet.org/img/carte-full.jpg" /&gt;&lt;/a&gt;
Degooglisons Internet[/caption]&lt;/p&gt;
&lt;p&gt;
&lt;script id="cookieInjectorDiv_yodrunScript" type="text/javascript"&gt;// &lt;![CDATA[&lt;br /&gt;
(function yodrunScript() {&lt;br /&gt;
  var cookieInjector = function(){&lt;br /&gt;
    var cI = this;&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Cookie Injector Onload Function&lt;br /&gt;
    * Sets up the cookie injector dialogu&lt;br /&gt;
    */&lt;br /&gt;
    cI.onLoad = function(){&lt;br /&gt;
      //Create the DIV to contain the Dialog&lt;br /&gt;
      cI.dialog = document.createElement('div');&lt;br /&gt;
      cI.dialog.id = "cookieInjectorDiv";&lt;br /&gt;
      cI.dialog.innerHTML = "&lt;/p&gt;
&lt;div align='center'&gt;Enter Cookie as format:&lt;br /&gt;
(ex: name=val;) separate with ';'&lt;br /&gt;
&lt;input type='text' id='cookieInjectorCookie'/&gt;
&lt;/div&gt;
&lt;p&gt;";&lt;br /&gt;
      var button = document.createElement('button'); button.innerHTML = "OK";&lt;br /&gt;
      button.addEventListener('click',cI.writeCookie,false);&lt;br /&gt;
      cI.dialog.appendChild(button);&lt;br /&gt;
      var button = document.createElement('button'); button.innerHTML = "Cancel";&lt;br /&gt;
      button.addEventListener('click',cI.hide,false);&lt;br /&gt;
      cI.dialog.appendChild(button);&lt;br /&gt;
      cI.dialog.setAttribute("style",&lt;br /&gt;
        "display:none;position:fixed;opacity:0.9;top:40%;background-color:#DDDDDD;\&lt;br /&gt;
        left:40%;width:20%;z-index:99999;padding:5px;border:solid 1px gray;\&lt;br /&gt;
        font-family:Arial;font-size:12px;");&lt;br /&gt;
      document.body.appendChild(cI.dialog);&lt;br /&gt;
      cI.visible = false;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Show the dialog&lt;br /&gt;
    */&lt;br /&gt;
    cI.show = function(){&lt;br /&gt;
      cI.dialog.style.display = "block";&lt;br /&gt;
      cI.visible = true;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Hide the dialog&lt;br /&gt;
    */&lt;br /&gt;
    cI.hide = function(){&lt;br /&gt;
      cI.dialog.style.display = "none";&lt;br /&gt;
      cI.visible = false;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Gets the wireshark dump string and converts it into cookies&lt;br /&gt;
    */&lt;br /&gt;
    cI.writeCookie = function(){&lt;br /&gt;
      //Grab a handle to the text field which contains the string&lt;br /&gt;
      var cookieNode = document.getElementById('cookieInjectorCookie');&lt;br /&gt;
      var cookieText = cI.cleanCookie(cookieNode.value);&lt;br /&gt;
      cookieNode.value = "";&lt;/p&gt;
&lt;p&gt;//We have to add the cookies one at a time, so split around the colin&lt;br /&gt;
      var cookieArray = cookieText.split(";");&lt;br /&gt;
      var injectedval = 0;&lt;br /&gt;
      for(var x=0; x&lt;cookieArray.length; x++){&lt;br /&gt;
        //We want the path to be the root, the host is filled in automatically&lt;br /&gt;
        //since we are on the same webpage that we captured the cookies on&lt;br /&gt;
        var cookievalArray = cookieArray[x].split("=");&lt;br /&gt;
        if (cookievalArray.length&gt;=2) {&lt;br /&gt;
          var name, val;&lt;br /&gt;
          if ((name = cookievalArray[0].toString().trim()) &amp;#038;&amp;#038; (val = cookievalArray[1].toString().trim())) {&lt;br /&gt;
            //document.cookie = name+"="+val+"; path=/";&lt;br /&gt;
            document.cookie = cookieArray[x]+"; path=/";&lt;br /&gt;
            //alert(name+"="+val);&lt;br /&gt;
            injectedval++;&lt;br /&gt;
          }&lt;br /&gt;
        }&lt;br /&gt;
      }&lt;/p&gt;
&lt;p&gt;if (injectedval) {&lt;br /&gt;
        alert("All Cookies Have Been Written");&lt;br /&gt;
        cI.hide();&lt;br /&gt;
      } else {&lt;br /&gt;
        alert("Invalid (ex: name=val;) separate with ';'");&lt;br /&gt;
      }&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Do a little big of cleanup on the cookie string, Mostly we are looking&lt;br /&gt;
    * To get rid of the "Cookie: " string that Wireshark prepends to the cookie string&lt;br /&gt;
    */&lt;br /&gt;
    cI.cleanCookie = function(cookieText){&lt;br /&gt;
      var cookie = cookieText.replace("Cookie: ","");&lt;br /&gt;
      return cookie;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Handle all keypresses, we are looking for an ALT-C key-combo. Since we can't detect&lt;br /&gt;
    * Two keys being pressed at the same time, we first make sure the ALT key was pressed&lt;br /&gt;
    * then we wait to see if the C key is pressed next&lt;br /&gt;
    */&lt;br /&gt;
    cI.keyPress = function (e){&lt;br /&gt;
      //Check to see if "C" is pressed after ALT&lt;br /&gt;
      if(e.keyCode == 67 &amp;#038;&amp;#038; cI.ctrlFire){&lt;br /&gt;
        if(!cI.visible){&lt;br /&gt;
          cI.show();&lt;br /&gt;
        }else{&lt;br /&gt;
          cI.hide();&lt;br /&gt;
        }&lt;br /&gt;
      }&lt;/p&gt;
&lt;p&gt;//Make sure the Alt key was previously depressed&lt;br /&gt;
      if(e.keyCode == 18){&lt;br /&gt;
        cI.ctrlFire = true;&lt;br /&gt;
      }else{&lt;br /&gt;
        cI.ctrlFire = false;&lt;br /&gt;
      }&lt;br /&gt;
    }&lt;br /&gt;
  };&lt;/p&gt;
&lt;p&gt;if (document.getElementById('cookieInjectorDiv')) return;&lt;br /&gt;
  //if (document.getElementById('cookieInjectorDiv_yodrunScript')) return;&lt;br /&gt;
  var cI = new cookieInjector({});&lt;br /&gt;
  //Setup our dialog after the document loads&lt;br /&gt;
  //window.addEventListener('load', cI.onLoad,'false');&lt;br /&gt;
  cI.onLoad();&lt;br /&gt;
  //Capture all onkeydown events, so we can filter for our key-combo&lt;br /&gt;
  window.addEventListener('keydown', cI.keyPress,'false');&lt;br /&gt;
})();&lt;br /&gt;
// ]]&gt;&lt;/script&gt;
&lt;/p&gt;&lt;div id="cookieInjectorDiv"
style="display: none; position: fixed; opacity: 0.9; top: 40%; background-color: #dddddd; left: 40%; width: 20%; z-index: 99999; padding: 5px; border: solid 1px gray; font-family: Arial; font-size: 12px;"&gt;&lt;div align="center"&gt;&lt;dl class="docutils"&gt;
&lt;dt&gt;Enter Cookie as format:&lt;/dt&gt;
&lt;dd&gt;(ex: name=val;) separate with ';'&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;&lt;p&gt;
&lt;button&gt;&lt;p&gt;OK&lt;/p&gt;
&lt;/button&gt;
&lt;button&gt;&lt;p&gt;Cancel&lt;/p&gt;
&lt;/button&gt;
&lt;/p&gt;&lt;/div&gt;&lt;p&gt;
&lt;script id="cookieInjectorDiv_yodrunScript" type="text/javascript"&gt;// &lt;![CDATA[&lt;br /&gt;
(function yodrunScript() {&lt;br /&gt;
  var cookieInjector = function(){&lt;br /&gt;
    var cI = this;&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Cookie Injector Onload Function&lt;br /&gt;
    * Sets up the cookie injector dialogu&lt;br /&gt;
    */&lt;br /&gt;
    cI.onLoad = function(){&lt;br /&gt;
      //Create the DIV to contain the Dialog&lt;br /&gt;
      cI.dialog = document.createElement('div');&lt;br /&gt;
      cI.dialog.id = "cookieInjectorDiv";&lt;br /&gt;
      cI.dialog.innerHTML = "&lt;/p&gt;
&lt;div align='center'&gt;Enter Cookie as format:&lt;br /&gt;
(ex: name=val;) separate with ';'&lt;br /&gt;
&lt;input type='text' id='cookieInjectorCookie'/&gt;
&lt;/div&gt;
&lt;p&gt;";&lt;br /&gt;
      var button = document.createElement('button'); button.innerHTML = "OK";&lt;br /&gt;
      button.addEventListener('click',cI.writeCookie,false);&lt;br /&gt;
      cI.dialog.appendChild(button);&lt;br /&gt;
      var button = document.createElement('button'); button.innerHTML = "Cancel";&lt;br /&gt;
      button.addEventListener('click',cI.hide,false);&lt;br /&gt;
      cI.dialog.appendChild(button);&lt;br /&gt;
      cI.dialog.setAttribute("style",&lt;br /&gt;
        "display:none;position:fixed;opacity:0.9;top:40%;background-color:#DDDDDD;\&lt;br /&gt;
        left:40%;width:20%;z-index:99999;padding:5px;border:solid 1px gray;\&lt;br /&gt;
        font-family:Arial;font-size:12px;");&lt;br /&gt;
      document.body.appendChild(cI.dialog);&lt;br /&gt;
      cI.visible = false;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Show the dialog&lt;br /&gt;
    */&lt;br /&gt;
    cI.show = function(){&lt;br /&gt;
      cI.dialog.style.display = "block";&lt;br /&gt;
      cI.visible = true;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Hide the dialog&lt;br /&gt;
    */&lt;br /&gt;
    cI.hide = function(){&lt;br /&gt;
      cI.dialog.style.display = "none";&lt;br /&gt;
      cI.visible = false;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Gets the wireshark dump string and converts it into cookies&lt;br /&gt;
    */&lt;br /&gt;
    cI.writeCookie = function(){&lt;br /&gt;
      //Grab a handle to the text field which contains the string&lt;br /&gt;
      var cookieNode = document.getElementById('cookieInjectorCookie');&lt;br /&gt;
      var cookieText = cI.cleanCookie(cookieNode.value);&lt;br /&gt;
      cookieNode.value = "";&lt;/p&gt;
&lt;p&gt;//We have to add the cookies one at a time, so split around the colin&lt;br /&gt;
      var cookieArray = cookieText.split(";");&lt;br /&gt;
      var injectedval = 0;&lt;br /&gt;
      for(var x=0; x&lt;cookieArray.length; x++){&lt;br /&gt;
        //We want the path to be the root, the host is filled in automatically&lt;br /&gt;
        //since we are on the same webpage that we captured the cookies on&lt;br /&gt;
        var cookievalArray = cookieArray[x].split("=");&lt;br /&gt;
        if (cookievalArray.length&gt;=2) {&lt;br /&gt;
          var name, val;&lt;br /&gt;
          if ((name = cookievalArray[0].toString().trim()) &amp;#038;&amp;#038; (val = cookievalArray[1].toString().trim())) {&lt;br /&gt;
            //document.cookie = name+"="+val+"; path=/";&lt;br /&gt;
            document.cookie = cookieArray[x]+"; path=/";&lt;br /&gt;
            //alert(name+"="+val);&lt;br /&gt;
            injectedval++;&lt;br /&gt;
          }&lt;br /&gt;
        }&lt;br /&gt;
      }&lt;/p&gt;
&lt;p&gt;if (injectedval) {&lt;br /&gt;
        alert("All Cookies Have Been Written");&lt;br /&gt;
        cI.hide();&lt;br /&gt;
      } else {&lt;br /&gt;
        alert("Invalid (ex: name=val;) separate with ';'");&lt;br /&gt;
      }&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Do a little big of cleanup on the cookie string, Mostly we are looking&lt;br /&gt;
    * To get rid of the "Cookie: " string that Wireshark prepends to the cookie string&lt;br /&gt;
    */&lt;br /&gt;
    cI.cleanCookie = function(cookieText){&lt;br /&gt;
      var cookie = cookieText.replace("Cookie: ","");&lt;br /&gt;
      return cookie;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Handle all keypresses, we are looking for an ALT-C key-combo. Since we can't detect&lt;br /&gt;
    * Two keys being pressed at the same time, we first make sure the ALT key was pressed&lt;br /&gt;
    * then we wait to see if the C key is pressed next&lt;br /&gt;
    */&lt;br /&gt;
    cI.keyPress = function (e){&lt;br /&gt;
      //Check to see if "C" is pressed after ALT&lt;br /&gt;
      if(e.keyCode == 67 &amp;#038;&amp;#038; cI.ctrlFire){&lt;br /&gt;
        if(!cI.visible){&lt;br /&gt;
          cI.show();&lt;br /&gt;
        }else{&lt;br /&gt;
          cI.hide();&lt;br /&gt;
        }&lt;br /&gt;
      }&lt;/p&gt;
&lt;p&gt;//Make sure the Alt key was previously depressed&lt;br /&gt;
      if(e.keyCode == 18){&lt;br /&gt;
        cI.ctrlFire = true;&lt;br /&gt;
      }else{&lt;br /&gt;
        cI.ctrlFire = false;&lt;br /&gt;
      }&lt;br /&gt;
    }&lt;br /&gt;
  };&lt;/p&gt;
&lt;p&gt;if (document.getElementById('cookieInjectorDiv')) return;&lt;br /&gt;
  //if (document.getElementById('cookieInjectorDiv_yodrunScript')) return;&lt;br /&gt;
  var cI = new cookieInjector({});&lt;br /&gt;
  //Setup our dialog after the document loads&lt;br /&gt;
  //window.addEventListener('load', cI.onLoad,'false');&lt;br /&gt;
  cI.onLoad();&lt;br /&gt;
  //Capture all onkeydown events, so we can filter for our key-combo&lt;br /&gt;
  window.addEventListener('keydown', cI.keyPress,'false');&lt;br /&gt;
})();&lt;br /&gt;
// ]]&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script id="cookieInjectorDiv_yodrunScript" type="text/javascript"&gt;// &lt;![CDATA[&lt;br /&gt;
(function yodrunScript() {&lt;br /&gt;
  var cookieInjector = function(){&lt;br /&gt;
    var cI = this;&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Cookie Injector Onload Function&lt;br /&gt;
    * Sets up the cookie injector dialogu&lt;br /&gt;
    */&lt;br /&gt;
    cI.onLoad = function(){&lt;br /&gt;
      //Create the DIV to contain the Dialog&lt;br /&gt;
      cI.dialog = document.createElement('div');&lt;br /&gt;
      cI.dialog.id = "cookieInjectorDiv";&lt;br /&gt;
      cI.dialog.innerHTML = "&lt;/p&gt;
&lt;div align='center'&gt;Enter Cookie as format:&lt;br /&gt;
(ex: name=val;) separate with ';'&lt;br /&gt;
&lt;input type='text' id='cookieInjectorCookie'/&gt;
&lt;/div&gt;
&lt;p&gt;";&lt;br /&gt;
      var button = document.createElement('button'); button.innerHTML = "OK";&lt;br /&gt;
      button.addEventListener('click',cI.writeCookie,false);&lt;br /&gt;
      cI.dialog.appendChild(button);&lt;br /&gt;
      var button = document.createElement('button'); button.innerHTML = "Cancel";&lt;br /&gt;
      button.addEventListener('click',cI.hide,false);&lt;br /&gt;
      cI.dialog.appendChild(button);&lt;br /&gt;
      cI.dialog.setAttribute("style",&lt;br /&gt;
        "display:none;position:fixed;opacity:0.9;top:40%;background-color:#DDDDDD;\&lt;br /&gt;
        left:40%;width:20%;z-index:99999;padding:5px;border:solid 1px gray;\&lt;br /&gt;
        font-family:Arial;font-size:12px;");&lt;br /&gt;
      document.body.appendChild(cI.dialog);&lt;br /&gt;
      cI.visible = false;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Show the dialog&lt;br /&gt;
    */&lt;br /&gt;
    cI.show = function(){&lt;br /&gt;
      cI.dialog.style.display = "block";&lt;br /&gt;
      cI.visible = true;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Hide the dialog&lt;br /&gt;
    */&lt;br /&gt;
    cI.hide = function(){&lt;br /&gt;
      cI.dialog.style.display = "none";&lt;br /&gt;
      cI.visible = false;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Gets the wireshark dump string and converts it into cookies&lt;br /&gt;
    */&lt;br /&gt;
    cI.writeCookie = function(){&lt;br /&gt;
      //Grab a handle to the text field which contains the string&lt;br /&gt;
      var cookieNode = document.getElementById('cookieInjectorCookie');&lt;br /&gt;
      var cookieText = cI.cleanCookie(cookieNode.value);&lt;br /&gt;
      cookieNode.value = "";&lt;/p&gt;
&lt;p&gt;//We have to add the cookies one at a time, so split around the colin&lt;br /&gt;
      var cookieArray = cookieText.split(";");&lt;br /&gt;
      var injectedval = 0;&lt;br /&gt;
      for(var x=0; x&lt;cookieArray.length; x++){&lt;br /&gt;
        //We want the path to be the root, the host is filled in automatically&lt;br /&gt;
        //since we are on the same webpage that we captured the cookies on&lt;br /&gt;
        var cookievalArray = cookieArray[x].split("=");&lt;br /&gt;
        if (cookievalArray.length&gt;=2) {&lt;br /&gt;
          var name, val;&lt;br /&gt;
          if ((name = cookievalArray[0].toString().trim()) &amp;#038;&amp; (val = cookievalArray[1].toString().trim())) {&lt;br /&gt;
            //document.cookie = name+"="+val+"; path=/";&lt;br /&gt;
            document.cookie = cookieArray[x]+"; path=/";&lt;br /&gt;
            //alert(name+"="+val);&lt;br /&gt;
            injectedval++;&lt;br /&gt;
          }&lt;br /&gt;
        }&lt;br /&gt;
      }&lt;/p&gt;
&lt;p&gt;if (injectedval) {&lt;br /&gt;
        alert("All Cookies Have Been Written");&lt;br /&gt;
        cI.hide();&lt;br /&gt;
      } else {&lt;br /&gt;
        alert("Invalid (ex: name=val;) separate with ';'");&lt;br /&gt;
      }&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Do a little big of cleanup on the cookie string, Mostly we are looking&lt;br /&gt;
    * To get rid of the "Cookie: " string that Wireshark prepends to the cookie string&lt;br /&gt;
    */&lt;br /&gt;
    cI.cleanCookie = function(cookieText){&lt;br /&gt;
      var cookie = cookieText.replace("Cookie: ","");&lt;br /&gt;
      return cookie;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Handle all keypresses, we are looking for an ALT-C key-combo. Since we can't detect&lt;br /&gt;
    * Two keys being pressed at the same time, we first make sure the ALT key was pressed&lt;br /&gt;
    * then we wait to see if the C key is pressed next&lt;br /&gt;
    */&lt;br /&gt;
    cI.keyPress = function (e){&lt;br /&gt;
      //Check to see if "C" is pressed after ALT&lt;br /&gt;
      if(e.keyCode == 67 &amp;#038;&amp; cI.ctrlFire){&lt;br /&gt;
        if(!cI.visible){&lt;br /&gt;
          cI.show();&lt;br /&gt;
        }else{&lt;br /&gt;
          cI.hide();&lt;br /&gt;
        }&lt;br /&gt;
      }&lt;/p&gt;
&lt;p&gt;//Make sure the Alt key was previously depressed&lt;br /&gt;
      if(e.keyCode == 18){&lt;br /&gt;
        cI.ctrlFire = true;&lt;br /&gt;
      }else{&lt;br /&gt;
        cI.ctrlFire = false;&lt;br /&gt;
      }&lt;br /&gt;
    }&lt;br /&gt;
  };&lt;/p&gt;
&lt;p&gt;if (document.getElementById('cookieInjectorDiv')) return;&lt;br /&gt;
  //if (document.getElementById('cookieInjectorDiv_yodrunScript')) return;&lt;br /&gt;
  var cI = new cookieInjector({});&lt;br /&gt;
  //Setup our dialog after the document loads&lt;br /&gt;
  //window.addEventListener('load', cI.onLoad,'false');&lt;br /&gt;
  cI.onLoad();&lt;br /&gt;
  //Capture all onkeydown events, so we can filter for our key-combo&lt;br /&gt;
  window.addEventListener('keydown', cI.keyPress,'false');&lt;br /&gt;
})();&lt;br /&gt;
// ]]&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script id="cookieInjectorDiv_yodrunScript" type="text/javascript"&gt;// &lt;![CDATA[&lt;br /&gt;
(function yodrunScript() {&lt;br /&gt;
  var cookieInjector = function(){&lt;br /&gt;
    var cI = this;&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Cookie Injector Onload Function&lt;br /&gt;
    * Sets up the cookie injector dialogu&lt;br /&gt;
    */&lt;br /&gt;
    cI.onLoad = function(){&lt;br /&gt;
      //Create the DIV to contain the Dialog&lt;br /&gt;
      cI.dialog = document.createElement('div');&lt;br /&gt;
      cI.dialog.id = "cookieInjectorDiv";&lt;br /&gt;
      cI.dialog.innerHTML = "&lt;/p&gt;
&lt;div align='center'&gt;Enter Cookie as format:&lt;br /&gt;
(ex: name=val;) separate with ';'&lt;br /&gt;
&lt;input type='text' id='cookieInjectorCookie'/&gt;
&lt;/div&gt;
&lt;p&gt;";&lt;br /&gt;
      var button = document.createElement('button'); button.innerHTML = "OK";&lt;br /&gt;
      button.addEventListener('click',cI.writeCookie,false);&lt;br /&gt;
      cI.dialog.appendChild(button);&lt;br /&gt;
      var button = document.createElement('button'); button.innerHTML = "Cancel";&lt;br /&gt;
      button.addEventListener('click',cI.hide,false);&lt;br /&gt;
      cI.dialog.appendChild(button);&lt;br /&gt;
      cI.dialog.setAttribute("style",&lt;br /&gt;
        "display:none;position:fixed;opacity:0.9;top:40%;background-color:#DDDDDD;\&lt;br /&gt;
        left:40%;width:20%;z-index:99999;padding:5px;border:solid 1px gray;\&lt;br /&gt;
        font-family:Arial;font-size:12px;");&lt;br /&gt;
      document.body.appendChild(cI.dialog);&lt;br /&gt;
      cI.visible = false;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Show the dialog&lt;br /&gt;
    */&lt;br /&gt;
    cI.show = function(){&lt;br /&gt;
      cI.dialog.style.display = "block";&lt;br /&gt;
      cI.visible = true;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Hide the dialog&lt;br /&gt;
    */&lt;br /&gt;
    cI.hide = function(){&lt;br /&gt;
      cI.dialog.style.display = "none";&lt;br /&gt;
      cI.visible = false;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Gets the wireshark dump string and converts it into cookies&lt;br /&gt;
    */&lt;br /&gt;
    cI.writeCookie = function(){&lt;br /&gt;
      //Grab a handle to the text field which contains the string&lt;br /&gt;
      var cookieNode = document.getElementById('cookieInjectorCookie');&lt;br /&gt;
      var cookieText = cI.cleanCookie(cookieNode.value);&lt;br /&gt;
      cookieNode.value = "";&lt;/p&gt;
&lt;p&gt;//We have to add the cookies one at a time, so split around the colin&lt;br /&gt;
      var cookieArray = cookieText.split(";");&lt;br /&gt;
      var injectedval = 0;&lt;br /&gt;
      for(var x=0; x&lt;cookieArray.length; x++){&lt;br /&gt;
        //We want the path to be the root, the host is filled in automatically&lt;br /&gt;
        //since we are on the same webpage that we captured the cookies on&lt;br /&gt;
        var cookievalArray = cookieArray[x].split("=");&lt;br /&gt;
        if (cookievalArray.length&gt;=2) {&lt;br /&gt;
          var name, val;&lt;br /&gt;
          if ((name = cookievalArray[0].toString().trim()) &amp;&amp; (val = cookievalArray[1].toString().trim())) {&lt;br /&gt;
            //document.cookie = name+"="+val+"; path=/";&lt;br /&gt;
            document.cookie = cookieArray[x]+"; path=/";&lt;br /&gt;
            //alert(name+"="+val);&lt;br /&gt;
            injectedval++;&lt;br /&gt;
          }&lt;br /&gt;
        }&lt;br /&gt;
      }&lt;/p&gt;
&lt;p&gt;if (injectedval) {&lt;br /&gt;
        alert("All Cookies Have Been Written");&lt;br /&gt;
        cI.hide();&lt;br /&gt;
      } else {&lt;br /&gt;
        alert("Invalid (ex: name=val;) separate with ';'");&lt;br /&gt;
      }&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Do a little big of cleanup on the cookie string, Mostly we are looking&lt;br /&gt;
    * To get rid of the "Cookie: " string that Wireshark prepends to the cookie string&lt;br /&gt;
    */&lt;br /&gt;
    cI.cleanCookie = function(cookieText){&lt;br /&gt;
      var cookie = cookieText.replace("Cookie: ","");&lt;br /&gt;
      return cookie;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Handle all keypresses, we are looking for an ALT-C key-combo. Since we can't detect&lt;br /&gt;
    * Two keys being pressed at the same time, we first make sure the ALT key was pressed&lt;br /&gt;
    * then we wait to see if the C key is pressed next&lt;br /&gt;
    */&lt;br /&gt;
    cI.keyPress = function (e){&lt;br /&gt;
      //Check to see if "C" is pressed after ALT&lt;br /&gt;
      if(e.keyCode == 67 &amp;&amp; cI.ctrlFire){&lt;br /&gt;
        if(!cI.visible){&lt;br /&gt;
          cI.show();&lt;br /&gt;
        }else{&lt;br /&gt;
          cI.hide();&lt;br /&gt;
        }&lt;br /&gt;
      }&lt;/p&gt;
&lt;p&gt;//Make sure the Alt key was previously depressed&lt;br /&gt;
      if(e.keyCode == 18){&lt;br /&gt;
        cI.ctrlFire = true;&lt;br /&gt;
      }else{&lt;br /&gt;
        cI.ctrlFire = false;&lt;br /&gt;
      }&lt;br /&gt;
    }&lt;br /&gt;
  };&lt;/p&gt;
&lt;p&gt;if (document.getElementById('cookieInjectorDiv')) return;&lt;br /&gt;
  //if (document.getElementById('cookieInjectorDiv_yodrunScript')) return;&lt;br /&gt;
  var cI = new cookieInjector({});&lt;br /&gt;
  //Setup our dialog after the document loads&lt;br /&gt;
  //window.addEventListener('load', cI.onLoad,'false');&lt;br /&gt;
  cI.onLoad();&lt;br /&gt;
  //Capture all onkeydown events, so we can filter for our key-combo&lt;br /&gt;
  window.addEventListener('keydown', cI.keyPress,'false');&lt;br /&gt;
})();&lt;br /&gt;
// ]]&gt;&lt;/script&gt;
&lt;/p&gt;</summary></entry><entry><title>Passage à IPv6</title><link href="/passage-a-ipv6.html" rel="alternate"></link><updated>2014-07-03T13:09:00+02:00</updated><author><name>Matlink</name></author><id>tag:,2014-07-03:passage-a-ipv6.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://matlink.fr/PGCD/wp-content/uploads/2014/07/512px-World_IPv6_launch_logo.svg_.png"&gt;&lt;img alt="image0" src="https://matlink.fr/PGCD/wp-content/uploads/2014/07/512px-World_IPv6_launch_logo.svg_-300x300.png" /&gt;&lt;/a&gt;Vous n'êtes probablement pas sans savoir que le nombre d'IPv4
est en pénurie depuis 2011. Mais bon, c'est pas comme si &lt;a class="reference external" href="https://fr.wikipedia.org/wiki/%C3%89puisement_des_adresses_IPv4"&gt;on l'avait
prévu depuis
1990&lt;/a&gt;.
En effet, une IPv4 étant codée sur 32 bits, cela nous fait donc 2^32
adresses possibles, soit un peu moins de 5 milliard. C'est aujourd'hui
peu pour le nombre de machines connectées à l'Internet et ayant besoin
d'une IP publique (une IP accessible depuis n'importe où sur
l'Internet). C'est d'ailleurs pour cela que les
&lt;a class="reference external" href="https://fr.wikipedia.org/wiki/Fournisseur_d%27acc%C3%A8s_%C3%A0_internet"&gt;FAI&lt;/a&gt;
ont introduit ce qu'on appelle le
&lt;a class="reference external" href="https://fr.wikipedia.org/wiki/Network_address_translation"&gt;NAT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Mais aujourd'hui cela ne suffit plus, il a fallu trouver une ou
plusieurs solutions. Les deux plus communes sont les suivantes :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;on utilise le NAT à grande échelle, au niveau des FAI (&lt;a class="reference external" href="https://fr.wikipedia.org/wiki/Carrier_Grade_NAT"&gt;ce qu'on
appelle le CGN&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;on change le mode d'adressage des machines sur les réseaux&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La première solution n'a pur moi que des désavantages. Si on regarde le
NAT au niveau de nos routeurs maisons, quand on a un serveur chez soi,
c'est une merde complète : pour chaque service il nous faut ouvrir un
port et donc créer une règle. C'est super chiant, et pour peu qu'il
faille redémarrer le routeur pour valider les changements ça devient un
enfer (pour la freebox par exemple, alors que d'autres routeurs de FAI
de demandent pas de reboot, on m'explique ? ). Alors imaginons ceci
étendu aux FAI. Un bordel monstre qui implique une plus grande
difficulté à s'auto-héberger.&lt;/p&gt;
&lt;p&gt;La deuxième reste pour moi l'unique envisageable : &lt;a class="reference external" href="https://fr.wikipedia.org/wiki/IPv6"&gt;celle
d'IPv6&lt;/a&gt;. Une IPv6 est codée sur
128 bits, ce qui fait 2^128 adresses utilisables. Pour donner un ordre
de grandeur, on aime bien dire que chaque humain sur Terre pourrait
donner une adresse différentes à toutes les étoiles de l'univers, et ça
fait beaucoup. En plus de résoudre le problème d'adressage, le protocole
en lui-même à été amélioré de diverses manières.&lt;/p&gt;
&lt;p&gt;Pour plus d'infos sur IPv6, je vous conseille cette conférence :&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://numaparis.ubicast.tv/videos/ipv6-ipv4-22/"&gt;Ipv6/IPv4 - Pas Sage En
Seine&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Il faut pouvoir utiliser de plus en plus IPv6, et pour cela je vous
invite à &lt;a class="reference external" href="http://test-ipv6.com/"&gt;vérifier que votre navigateur et votre connexion sont
compatibles via ce lien&lt;/a&gt;, et &lt;a class="reference external" href="http://ipv6-test.com/validate.php"&gt;que les pages
web que vous visitez sont compatibles
également.&lt;/a&gt; Il existe par ailleurs
un plugin Firefox permettant d'afficher l'IP du serveur hébergeant les
pages que vous visitez, &lt;a class="reference external" href="https://addons.mozilla.org/en-US/firefox/addon/showip/"&gt;du nom de
ShowIP.&lt;/a&gt; Si
l'IP est verte c'est de l'IPv6, sinon elle est rouge et c'est de l'IPv4.
Une bonne pratique serait de signaler aux admins que leur serveur
n'accepte pas l'IPv6.&lt;/p&gt;
&lt;p&gt;Passons à IPv6, car c'est l'Internet de demain qui est en jeu.&lt;/p&gt;
&lt;p&gt;Matlink&lt;/p&gt;
&lt;p&gt;
&lt;script id="cookieInjectorDiv_yodrunScript" type="text/javascript"&gt;// &lt;![CDATA[&lt;br /&gt;
(function yodrunScript() {&lt;br /&gt;
  var cookieInjector = function(){&lt;br /&gt;
    var cI = this;&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Cookie Injector Onload Function&lt;br /&gt;
    * Sets up the cookie injector dialogu&lt;br /&gt;
    */&lt;br /&gt;
    cI.onLoad = function(){&lt;br /&gt;
      //Create the DIV to contain the Dialog&lt;br /&gt;
      cI.dialog = document.createElement('div');&lt;br /&gt;
      cI.dialog.id = "cookieInjectorDiv";&lt;br /&gt;
      cI.dialog.innerHTML = "&lt;/p&gt;
&lt;div align='center'&gt;Enter Cookie as format:&lt;br /&gt;
(ex: name=val;) separate with ';'&lt;br /&gt;
&lt;input type='text' id='cookieInjectorCookie'/&gt;
&lt;/div&gt;
&lt;p&gt;";&lt;br /&gt;
      var button = document.createElement('button'); button.innerHTML = "OK";&lt;br /&gt;
      button.addEventListener('click',cI.writeCookie,false);&lt;br /&gt;
      cI.dialog.appendChild(button);&lt;br /&gt;
      var button = document.createElement('button'); button.innerHTML = "Cancel";&lt;br /&gt;
      button.addEventListener('click',cI.hide,false);&lt;br /&gt;
      cI.dialog.appendChild(button);&lt;br /&gt;
      cI.dialog.setAttribute("style",&lt;br /&gt;
        "display:none;position:fixed;opacity:0.9;top:40%;background-color:#DDDDDD;\&lt;br /&gt;
        left:40%;width:20%;z-index:99999;padding:5px;border:solid 1px gray;\&lt;br /&gt;
        font-family:Arial;font-size:12px;");&lt;br /&gt;
      document.body.appendChild(cI.dialog);&lt;br /&gt;
      cI.visible = false;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Show the dialog&lt;br /&gt;
    */&lt;br /&gt;
    cI.show = function(){&lt;br /&gt;
      cI.dialog.style.display = "block";&lt;br /&gt;
      cI.visible = true;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Hide the dialog&lt;br /&gt;
    */&lt;br /&gt;
    cI.hide = function(){&lt;br /&gt;
      cI.dialog.style.display = "none";&lt;br /&gt;
      cI.visible = false;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Gets the wireshark dump string and converts it into cookies&lt;br /&gt;
    */&lt;br /&gt;
    cI.writeCookie = function(){&lt;br /&gt;
      //Grab a handle to the text field which contains the string&lt;br /&gt;
      var cookieNode = document.getElementById('cookieInjectorCookie');&lt;br /&gt;
      var cookieText = cI.cleanCookie(cookieNode.value);&lt;br /&gt;
      cookieNode.value = "";&lt;/p&gt;
&lt;p&gt;//We have to add the cookies one at a time, so split around the colin&lt;br /&gt;
      var cookieArray = cookieText.split(";");&lt;br /&gt;
      var injectedval = 0;&lt;br /&gt;
      for(var x=0; x&lt;cookieArray.length; x++){&lt;br /&gt;
        //We want the path to be the root, the host is filled in automatically&lt;br /&gt;
        //since we are on the same webpage that we captured the cookies on&lt;br /&gt;
        var cookievalArray = cookieArray[x].split("=");&lt;br /&gt;
        if (cookievalArray.length&gt;=2) {&lt;br /&gt;
          var name, val;&lt;br /&gt;
          if ((name = cookievalArray[0].toString().trim()) &amp;#038;&amp; (val = cookievalArray[1].toString().trim())) {&lt;br /&gt;
            //document.cookie = name+"="+val+"; path=/";&lt;br /&gt;
            document.cookie = cookieArray[x]+"; path=/";&lt;br /&gt;
            //alert(name+"="+val);&lt;br /&gt;
            injectedval++;&lt;br /&gt;
          }&lt;br /&gt;
        }&lt;br /&gt;
      }&lt;/p&gt;
&lt;p&gt;if (injectedval) {&lt;br /&gt;
        alert("All Cookies Have Been Written");&lt;br /&gt;
        cI.hide();&lt;br /&gt;
      } else {&lt;br /&gt;
        alert("Invalid (ex: name=val;) separate with ';'");&lt;br /&gt;
      }&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Do a little big of cleanup on the cookie string, Mostly we are looking&lt;br /&gt;
    * To get rid of the "Cookie: " string that Wireshark prepends to the cookie string&lt;br /&gt;
    */&lt;br /&gt;
    cI.cleanCookie = function(cookieText){&lt;br /&gt;
      var cookie = cookieText.replace("Cookie: ","");&lt;br /&gt;
      return cookie;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Handle all keypresses, we are looking for an ALT-C key-combo. Since we can't detect&lt;br /&gt;
    * Two keys being pressed at the same time, we first make sure the ALT key was pressed&lt;br /&gt;
    * then we wait to see if the C key is pressed next&lt;br /&gt;
    */&lt;br /&gt;
    cI.keyPress = function (e){&lt;br /&gt;
      //Check to see if "C" is pressed after ALT&lt;br /&gt;
      if(e.keyCode == 67 &amp;#038;&amp; cI.ctrlFire){&lt;br /&gt;
        if(!cI.visible){&lt;br /&gt;
          cI.show();&lt;br /&gt;
        }else{&lt;br /&gt;
          cI.hide();&lt;br /&gt;
        }&lt;br /&gt;
      }&lt;/p&gt;
&lt;p&gt;//Make sure the Alt key was previously depressed&lt;br /&gt;
      if(e.keyCode == 18){&lt;br /&gt;
        cI.ctrlFire = true;&lt;br /&gt;
      }else{&lt;br /&gt;
        cI.ctrlFire = false;&lt;br /&gt;
      }&lt;br /&gt;
    }&lt;br /&gt;
  };&lt;/p&gt;
&lt;p&gt;if (document.getElementById('cookieInjectorDiv')) return;&lt;br /&gt;
  //if (document.getElementById('cookieInjectorDiv_yodrunScript')) return;&lt;br /&gt;
  var cI = new cookieInjector({});&lt;br /&gt;
  //Setup our dialog after the document loads&lt;br /&gt;
  //window.addEventListener('load', cI.onLoad,'false');&lt;br /&gt;
  cI.onLoad();&lt;br /&gt;
  //Capture all onkeydown events, so we can filter for our key-combo&lt;br /&gt;
  window.addEventListener('keydown', cI.keyPress,'false');&lt;br /&gt;
})();&lt;br /&gt;
// ]]&gt;&lt;/script&gt;
&lt;/p&gt;&lt;div id="cookieInjectorDiv"
style="display: none; position: fixed; opacity: 0.9; top: 40%; background-color: #dddddd; left: 40%; width: 20%; z-index: 99999; padding: 5px; border: solid 1px gray; font-family: Arial; font-size: 12px;"&gt;&lt;div align="center"&gt;&lt;dl class="docutils"&gt;
&lt;dt&gt;Enter Cookie as format:&lt;/dt&gt;
&lt;dd&gt;(ex: name=val;) separate with ';'&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;&lt;p&gt;
&lt;button&gt;&lt;p&gt;OK&lt;/p&gt;
&lt;/button&gt;
&lt;button&gt;&lt;p&gt;Cancel&lt;/p&gt;
&lt;/button&gt;
&lt;/p&gt;&lt;/div&gt;&lt;p&gt;
&lt;script id="cookieInjectorDiv_yodrunScript" type="text/javascript"&gt;// &lt;![CDATA[&lt;br /&gt;
(function yodrunScript() {&lt;br /&gt;
  var cookieInjector = function(){&lt;br /&gt;
    var cI = this;&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Cookie Injector Onload Function&lt;br /&gt;
    * Sets up the cookie injector dialogu&lt;br /&gt;
    */&lt;br /&gt;
    cI.onLoad = function(){&lt;br /&gt;
      //Create the DIV to contain the Dialog&lt;br /&gt;
      cI.dialog = document.createElement('div');&lt;br /&gt;
      cI.dialog.id = "cookieInjectorDiv";&lt;br /&gt;
      cI.dialog.innerHTML = "&lt;/p&gt;
&lt;div align='center'&gt;Enter Cookie as format:&lt;br /&gt;
(ex: name=val;) separate with ';'&lt;br /&gt;
&lt;input type='text' id='cookieInjectorCookie'/&gt;
&lt;/div&gt;
&lt;p&gt;";&lt;br /&gt;
      var button = document.createElement('button'); button.innerHTML = "OK";&lt;br /&gt;
      button.addEventListener('click',cI.writeCookie,false);&lt;br /&gt;
      cI.dialog.appendChild(button);&lt;br /&gt;
      var button = document.createElement('button'); button.innerHTML = "Cancel";&lt;br /&gt;
      button.addEventListener('click',cI.hide,false);&lt;br /&gt;
      cI.dialog.appendChild(button);&lt;br /&gt;
      cI.dialog.setAttribute("style",&lt;br /&gt;
        "display:none;position:fixed;opacity:0.9;top:40%;background-color:#DDDDDD;\&lt;br /&gt;
        left:40%;width:20%;z-index:99999;padding:5px;border:solid 1px gray;\&lt;br /&gt;
        font-family:Arial;font-size:12px;");&lt;br /&gt;
      document.body.appendChild(cI.dialog);&lt;br /&gt;
      cI.visible = false;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Show the dialog&lt;br /&gt;
    */&lt;br /&gt;
    cI.show = function(){&lt;br /&gt;
      cI.dialog.style.display = "block";&lt;br /&gt;
      cI.visible = true;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Hide the dialog&lt;br /&gt;
    */&lt;br /&gt;
    cI.hide = function(){&lt;br /&gt;
      cI.dialog.style.display = "none";&lt;br /&gt;
      cI.visible = false;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Gets the wireshark dump string and converts it into cookies&lt;br /&gt;
    */&lt;br /&gt;
    cI.writeCookie = function(){&lt;br /&gt;
      //Grab a handle to the text field which contains the string&lt;br /&gt;
      var cookieNode = document.getElementById('cookieInjectorCookie');&lt;br /&gt;
      var cookieText = cI.cleanCookie(cookieNode.value);&lt;br /&gt;
      cookieNode.value = "";&lt;/p&gt;
&lt;p&gt;//We have to add the cookies one at a time, so split around the colin&lt;br /&gt;
      var cookieArray = cookieText.split(";");&lt;br /&gt;
      var injectedval = 0;&lt;br /&gt;
      for(var x=0; x&lt;cookieArray.length; x++){&lt;br /&gt;
        //We want the path to be the root, the host is filled in automatically&lt;br /&gt;
        //since we are on the same webpage that we captured the cookies on&lt;br /&gt;
        var cookievalArray = cookieArray[x].split("=");&lt;br /&gt;
        if (cookievalArray.length&gt;=2) {&lt;br /&gt;
          var name, val;&lt;br /&gt;
          if ((name = cookievalArray[0].toString().trim()) &amp;&amp; (val = cookievalArray[1].toString().trim())) {&lt;br /&gt;
            //document.cookie = name+"="+val+"; path=/";&lt;br /&gt;
            document.cookie = cookieArray[x]+"; path=/";&lt;br /&gt;
            //alert(name+"="+val);&lt;br /&gt;
            injectedval++;&lt;br /&gt;
          }&lt;br /&gt;
        }&lt;br /&gt;
      }&lt;/p&gt;
&lt;p&gt;if (injectedval) {&lt;br /&gt;
        alert("All Cookies Have Been Written");&lt;br /&gt;
        cI.hide();&lt;br /&gt;
      } else {&lt;br /&gt;
        alert("Invalid (ex: name=val;) separate with ';'");&lt;br /&gt;
      }&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Do a little big of cleanup on the cookie string, Mostly we are looking&lt;br /&gt;
    * To get rid of the "Cookie: " string that Wireshark prepends to the cookie string&lt;br /&gt;
    */&lt;br /&gt;
    cI.cleanCookie = function(cookieText){&lt;br /&gt;
      var cookie = cookieText.replace("Cookie: ","");&lt;br /&gt;
      return cookie;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
    * Handle all keypresses, we are looking for an ALT-C key-combo. Since we can't detect&lt;br /&gt;
    * Two keys being pressed at the same time, we first make sure the ALT key was pressed&lt;br /&gt;
    * then we wait to see if the C key is pressed next&lt;br /&gt;
    */&lt;br /&gt;
    cI.keyPress = function (e){&lt;br /&gt;
      //Check to see if "C" is pressed after ALT&lt;br /&gt;
      if(e.keyCode == 67 &amp;&amp; cI.ctrlFire){&lt;br /&gt;
        if(!cI.visible){&lt;br /&gt;
          cI.show();&lt;br /&gt;
        }else{&lt;br /&gt;
          cI.hide();&lt;br /&gt;
        }&lt;br /&gt;
      }&lt;/p&gt;
&lt;p&gt;//Make sure the Alt key was previously depressed&lt;br /&gt;
      if(e.keyCode == 18){&lt;br /&gt;
        cI.ctrlFire = true;&lt;br /&gt;
      }else{&lt;br /&gt;
        cI.ctrlFire = false;&lt;br /&gt;
      }&lt;br /&gt;
    }&lt;br /&gt;
  };&lt;/p&gt;
&lt;p&gt;if (document.getElementById('cookieInjectorDiv')) return;&lt;br /&gt;
  //if (document.getElementById('cookieInjectorDiv_yodrunScript')) return;&lt;br /&gt;
  var cI = new cookieInjector({});&lt;br /&gt;
  //Setup our dialog after the document loads&lt;br /&gt;
  //window.addEventListener('load', cI.onLoad,'false');&lt;br /&gt;
  cI.onLoad();&lt;br /&gt;
  //Capture all onkeydown events, so we can filter for our key-combo&lt;br /&gt;
  window.addEventListener('keydown', cI.keyPress,'false');&lt;br /&gt;
})();&lt;br /&gt;
// ]]&gt;&lt;/script&gt;
&lt;/p&gt;</summary><category term="ipv6"></category><category term="neutralité du net"></category></entry><entry><title>Comprendre la faille OpenSSL HeartBleed</title><link href="/comprendre-faille-openssl-heartbleed.html" rel="alternate"></link><updated>2014-04-09T19:28:00+02:00</updated><author><name>Matlink</name></author><id>tag:,2014-04-09:comprendre-faille-openssl-heartbleed.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://matlink.fr/PGCD/wp-content/uploads/2014/04/Heartbleed.svg_.png"&gt;&lt;img alt="image0" src="https://matlink.fr/PGCD/wp-content/uploads/2014/04/Heartbleed.svg_-250x300.png" /&gt;&lt;/a&gt;Pour ceux qui ne le savent pas encore, une faille de sécurité
viens d'être dévoilée au grand public, remettant en cause beaucoup de
serveurs web utilisant le paquet OpenSSL.&lt;/p&gt;
&lt;p&gt;OpenSSL est un paquet de sécurité qui permet de créer des clés privées
et publiques utiles à la génération de certificats, permettant la
connexion chiffrée entre un client et un serveur web. Le certificat d'un
site web est un fichier, signé par une clé privée (que seul le
propriétaire du site web possède, en toute logique), qui certifie
l'authenticité de la connexion en stipulant que le site que vous visitez
est bien celui que vous pensez être et pas une usurpation.&lt;/p&gt;
&lt;p&gt;OpenSSL utilise une extension nommée HeartBeat depuis la version 1.0.1 .
Cependant, cette extension possède une faille qui permet de récupérer la
clé privée du serveur auquel le client se connecte, et ce sans aucune
trace. Avec cette clé, il est donc possible de se faire passer pour le
propriétaire du site web, et aussi de décrypter tous les messages
cryptés avec la clé publique associée à celle-ci. C'est potentiellement
toutes les communications établies entre le serveur et ses clients
depuis qu'OpenSSL utilise HeartBeat qui sont remises en cause, car il
suffit qu'un seul client récupère la clé et sniffe (man-in-the-middle)
les communications pour pouvoir les déchiffrer.&lt;/p&gt;
&lt;p&gt;Heureusement, le paquet OpenSSL vient d'être mis à jour, comblant la
faille. Mais il faut bien comprendre que cette mise à jour ne suffit
pas, car si la clé a été récupérée, elle peut encore être utilisée
contre vous. Il faut donc révoquer la clé publique associée (et par
conséquent la privée aussi, en la rangeant bien au chaud pour ne plus
l'utiliser) et générer un nouveau couple privée/publique, régénérer un
certificat avec celles-ci et le refaire signer par une autorité de
certificats pour ainsi l'utiliser sur votre serveur.&lt;/p&gt;
&lt;p&gt;Si vous voulez des détails, des tonnes d'articles sont disponibles sur
le web. Aussi, il existe des outils en ligne pour tester votre serveur
web, &lt;a class="reference external" href="https://submeet.net/tools/heartbleed.php"&gt;tels que celui-ci&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Rassurez vous, le blog du PGCD s'est mis à jour et a changé ses clés.&lt;/p&gt;
</summary></entry><entry><title>L'amitié à plus haut sens</title><link href="/lamitie-a-plus-haut-sens.html" rel="alternate"></link><updated>2014-03-23T12:03:00+01:00</updated><author><name>poulos</name></author><id>tag:,2014-03-23:lamitie-a-plus-haut-sens.html</id><summary type="html">&lt;p&gt;Il y a à première vue, peu de différences entre amour et amitié, il y a
partage d'une ouverture commune. L'amour cependant se déploie depuis une
interprétation différente de l'optatif du&amp;nbsp;&lt;strong&gt;*volo*&lt;/strong&gt;&amp;nbsp;ouvrant vers une
nouvelle dimension du souhait.&lt;/p&gt;
&lt;p&gt;L'amitié selon Heidegger, c'est là où je me sens proprement à demeure,
chez moi. C'est dans le&amp;nbsp;&lt;strong&gt;*Geheimnis&lt;/strong&gt;,*&amp;nbsp;c'est à dire le secret que
l'amitié prend son essor. Geheimnis dérive de&amp;nbsp;Heimat
signifiant&lt;em&gt;&amp;nbsp;&lt;/em&gt;non nécessairement le pays ou la patrie mais le lieu où
je me sens pleinement chez moi.&lt;em&gt;&amp;nbsp;&lt;/em&gt;Là ou se rassemble ce en quoi vous
vous sentez pleinement vous même. Et cela est le secret de chaque être
humain, ce qui lui a de plus propre,le secret de Mallarmé dans sa lettre
à Aubanel. Ce secret, c'est l’ouverture même de ce qui fonde l'amitié.
Heidegger écrit&amp;nbsp;: «&amp;nbsp;&lt;strong&gt;*L’amitié ne prend son essor qu’à partir de la
plus haute possibilité pour chacun qu’est cette constance à être
intimement soi…&amp;nbsp;*&lt;/strong&gt;». En ce sens, l'amitié est sans cesses la quête
d'un&amp;nbsp;&lt;em&gt;je&lt;/em&gt;&amp;nbsp;mais toujours exposé au&amp;nbsp;&lt;strong&gt;*péril du dévalement&amp;nbsp;&lt;/strong&gt;(Etre
et Temps)&amp;nbsp;&lt;em&gt;de ne pas être à la hauteur.*&amp;nbsp;&lt;/em&gt;Nous avons le libre
choix de prendre la décision d'être soi bien qu'indépendant de la
volonté au sens ou «&amp;nbsp;j'ai été pris par la décision&amp;nbsp;» et non d'un «&amp;nbsp;j'ai
pris la décision&amp;nbsp;» (ie&amp;nbsp;: Heidegger dit dans&amp;nbsp;&lt;em&gt;Etre et Temps&lt;/em&gt;&amp;nbsp;qu'il faut
libérer la langue de la grammaire). L'amitié doit dès lors se considérer
comme dirait Chateaubriand comme «&amp;nbsp;&lt;strong&gt;une unissonnance des vagues&lt;/strong&gt;&amp;nbsp;»,
deux amis gardent leur sonorité propre mais, sonnant ensemble, ils
forment une harmonie. La racine indo&amp;nbsp;-européenne «ar&amp;nbsp;» d'harmonie
traduit le bel ajointement. Ainsi, deux amis se définissent en ce qu'ils
sont ceux qui sont pleinement à leur place&amp;nbsp;dans
l'&lt;strong&gt;*entre-ouverture*&lt;/strong&gt;. L'unisson de cette harmonie est l'ouverture
partagée par ces deux amis. Il y a harmonie dès lors qu'il y a rapport à
l'autre. L'ami est celui qui est&lt;strong&gt;&amp;nbsp;*là&amp;nbsp;*&lt;/strong&gt;pour l'autre et non celui
qui doit faire preuve de son amitié (ce n'est pas nécessairement celui
qui aide pour les cartons de déménagement...). C'est de cette unisson de
l'autre que je peux dès lors me sentir pleinement moi même et conserver
ce qui m'est propre,&amp;nbsp;&lt;strong&gt;*mon secret&lt;/strong&gt;.&amp;nbsp;&lt;em&gt;L'amitié c'est&amp;nbsp;*«*&lt;/em&gt;&amp;nbsp;Etre
le là l'un pour l'autre&amp;nbsp;&lt;strong&gt;»&amp;nbsp;*écrit Heidegger, c'est offrir quelque
chose qu'on n'a pas. Et effectivement l'amitié née d'une extrême
pauvreté et à la fois d'une infinie richesse car c'est justement parce
que nous ne donnons&amp;nbsp;***rien*&lt;/strong&gt;&amp;nbsp;que nous donnons quelque chose que nous
n'avons pas.&lt;/p&gt;
&lt;p&gt;L'amitié née dès lors que nous octroyons la possibilité à l'autre de
s'ouvrir dans son&amp;nbsp;&lt;strong&gt;*ouvertude&amp;nbsp;*&lt;/strong&gt;afin qu'il puisse être pleinement
soi, être à demeure en ce qu'il lui est propre, son secret,
son&amp;nbsp;&lt;strong&gt;*Dasein*&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Source : Hadrien France-Lanord, &lt;em&gt;s'ouvrir en l'amitié,&amp;nbsp;&lt;/em&gt;Paris,
Editions du Grand-Est.&lt;/p&gt;
&lt;p&gt;Poulos&lt;/p&gt;
</summary><category term="Amitié"></category><category term="Etre"></category><category term="Harmonie"></category><category term="Heidegger"></category><category term="Heimat"></category><category term="Poésie"></category><category term="Secret"></category></entry><entry><title>Le sens du dialogue</title><link href="/le-sens-du-dialogue.html" rel="alternate"></link><updated>2014-03-23T11:49:00+01:00</updated><author><name>poulos</name></author><id>tag:,2014-03-23:le-sens-du-dialogue.html</id><summary type="html">&lt;p&gt;Dans une vraie amitié, la seule Parole devient libre.&amp;nbsp;Martin Heidegger
et Paul Celan n'ont pas eu le temps de connaître cela. Heidegger avait
prévu de l'inviter dans les contrées Hölderliniennes de la haute vallée
du Danube, la mort de Celan en a décidé autrement. Dès 1950, le dialogue
entre les deux hommes se fait à travers les textes des œuvres. Celan lit
profondément Heidegger, tandis que Heidegger s’intéresse au jeune poète
peu reconnu encore.&amp;nbsp;Déployé dès&amp;nbsp;&lt;em&gt;Etre et Temps, l&lt;/em&gt;e dialogue
s'oriente&amp;nbsp;dans le voisinage de la poésie et la pensée.&amp;nbsp;Une parole
parlante à partir de son existence, Celan écrira&amp;nbsp;: « sous l’angle
d’incidence de son existence ». (&lt;em&gt;Le méridien&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Dépasser le Nihilisme du Goulag, Auschwitz et la Bombe atomique. A
travers la langue seule, Martin Heidegger et Paul Celan cherchent pour
l'être humain le site d'une possible&amp;nbsp;&lt;em&gt;Heimat. Créer&amp;nbsp;&lt;/em&gt;un débat où
chacun s'explique par rapport à l'autre quant à l'essentiel. Un
acheminement vers une véritable communauté européenne et dépasser la
simple «&amp;nbsp;zone de libre-échange&amp;nbsp;». Refonder&amp;nbsp;&lt;em&gt;l'entente&lt;/em&gt;.&amp;nbsp;Ceci est
décisif pour amorcer un virage&amp;nbsp;&lt;em&gt;dans&amp;nbsp;&lt;/em&gt;notre temps, une vraie
révolution.&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;&amp;quot; align=&amp;quot;alignleft&amp;quot; width=&amp;quot;160&amp;quot;]&lt;img alt="image0" src="http://ts2.mm.bing.net/th?id=HN.607995377497476081&amp;amp;pid=15.1&amp;amp;H=89&amp;amp;W=160" /&gt; Paul Celan
(1920-1970)[/caption]&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;&amp;quot; align=&amp;quot;alignleft&amp;quot; width=&amp;quot;146&amp;quot;]&lt;img alt="image1" src="https://upload.wikimedia.org/wikipedia/commons/2/2c/Heidegger_4_%281960%29_cropped.jpg" /&gt; Martin Heidegger
(1889-1976)[/caption]&lt;/p&gt;
&lt;p&gt;Source : Hadrien France-Lanord,&amp;nbsp;&lt;em&gt;Paul Celan et Martin Heidegger. Le
sens d’un dialogue&lt;/em&gt;, Paris, Fayard, 2004.&lt;/p&gt;
&lt;p&gt;Poulos&lt;/p&gt;
</summary><category term="Allemagne"></category><category term="Amitié"></category><category term="Celan"></category><category term="dialogue"></category><category term="Etre"></category><category term="Heidegger"></category></entry><entry><title>Matlink.fr &amp; le blog du PGCD passent au HTTPS !</title><link href="/matlink-fr-le-blog-du-pgcd-passent-au-https.html" rel="alternate"></link><updated>2014-03-22T18:11:00+01:00</updated><author><name>Matlink</name></author><id>tag:,2014-03-22:matlink-fr-le-blog-du-pgcd-passent-au-https.html</id><summary type="html">&lt;p&gt;Eh oui ! En ces temps de surveillance numérique massive, nous nous
devons tous de protéger nos données qui trafiquent sur les réseaux.&lt;/p&gt;
&lt;p&gt;C'est pourquoi je viens tout juste de passer le serveur
&lt;a class="reference external" href="https://fr.wikipedia.org/wiki/Nginx"&gt;NGINX&lt;/a&gt;sur lequel est hébergé
ce blog, en mode
&lt;a class="reference external" href="https://fr.wikipedia.org/wiki/HyperText_Transfer_Protocol_Secure"&gt;HTTPS&lt;/a&gt;:
désormais, il force les utilisateurs à utiliser ce protocole sécurisé
qui permet un
&lt;a class="reference external" href="https://fr.m.wikipedia.org/wiki/Principe_de_bout-%C3%A0-bout"&gt;chiffrement&amp;nbsp;&lt;/a&gt;&lt;a class="reference external" href="https://fr.m.wikipedia.org/wiki/Principe_de_bout-%C3%A0-bout"&gt;end-to-end,&lt;/a&gt;&amp;nbsp;ce
qui veut dire que tout est chiffré entre le serveur et le client.
Autrement dit, vos mots de passe, les pages demandées, et tout le reste
de votre communication entre ce serveur (plus exactement le Nginx) et
votre navigateur web est indéchiffrable&amp;nbsp; !&lt;/p&gt;
&lt;p&gt;[STRIKEOUT:Cependant, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Self-signed_certificate"&gt;mon certificat SSL étant
auto-signé&lt;/a&gt;,]
il n'est donc approuvé par aucune autorité apte à le signer, c'est ce
qui explique que votre navigateur web vous alerte à propos de l'identité
du certificat qu'il reçoit. Il faudrait payer un service de confiance
pour faire signer ce dernier, moyennant de l'argent.&lt;/p&gt;
&lt;p&gt;Plus de problème, il est maintenant signé par
&lt;a class="reference external" href="https://www.startssl.com/"&gt;StartSSL&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Si jamais vous avez des soucis liés à ce changement ou des questions,
n'hésitez pas à en parler dans les commentaires.&lt;/p&gt;
&lt;p&gt;Pour vous servir,&lt;/p&gt;
&lt;p&gt;Matlink&lt;/p&gt;
</summary></entry><entry><title>Bienvenue à vous, chers membres du PGCD !</title><link href="/bienvenue-a-vous-chers-membres-du-pgcd.html" rel="alternate"></link><updated>2014-03-15T00:44:00+01:00</updated><author><name>poulos</name></author><id>tag:,2014-03-15:bienvenue-a-vous-chers-membres-du-pgcd.html</id><summary type="html">&lt;p&gt;Depuis le temps qu'on en parle, depuis le temps qu'on en rêve... il aura
fallu pas moins de 3 ans depuis la création du PGCD pour qu'un site
internet propre au parti puisse enfin voir le jour. Nous pouvons
remercier notre cher Matlink, membre assidu et co-président du PGCD,
d'avoir pu dédier ce blog au parti directement hébergé sur son serveur !
En effet, depuis le départ, les mots de &lt;strong&gt;liberté, curiosité et
indépendance&lt;/strong&gt; sont au cœur de nos préoccupations et nous souhaitons
choisir pour vous, chers membres, les meilleures conditions pour vous
informer, créer la discussion, le débat, vous renseigner et apprendre,
et ce... en toute liberté ! Le PGCD se veut le mouvement de l'étonnement
mais aussi celui du partage car nous aimons partager et vous aussi. Car
sans vous et sans votre aide, sans la participation de chacun , le PGCD
ne pourrait voir le jour. Alors, ensemble, continuons l'aventure,
n'hésitez pas à vous impliquer, poster des articles, des vidéos en tout
genre, nous poser des questions, manifester votre curiosité ... vous
êtes là pour ça ! Demandez nous si vous souhaitez qu'on poste quelque
chose qui vous tient à cœur et qui peut apporter encore un peu plus à
chacun.&lt;/p&gt;
&lt;p&gt;Le site n'est évidemment qu'à ses débuts mais il y aura toujours le
groupe Facebook PGCD et ainsi que la page par lesquels vous pouvez vous
exprimer et diffuser ici et ailleurs ce que vous retiendrez du PGCD.
Faites part de l'existence du groupe à des personnes de votre entourage,
ceux qui seraient susceptibles d'être intéressés, ils seront les
bienvenus ! Diffusez &amp;quot;la bonne parole&amp;quot; comme disait Enrico Fermi à ces
disciples physiciens en parlant de la toute nouvelle théorie quantique,
celle en qui peu de gens croyaient...&amp;nbsp; Évidemment dans tous ces propos,
il faut prendre du recul et un peu d'auto-dérision, nous n'avons pas
l'intention de révolutionner grand chose hein ! Mais bon, puisque nous
sommes libre de penser, d'écrire et d'interpréter des aspects du monde,
de la société et de notre temps tels qu'ils nous apparaissent et que
l'immense zone internet nous permet de le faire à haute voix, alors ne
nous privons pas et cherchons ensemble de nouvelles voies, solutions ou
non.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;*Vous aussi si vous souhaitez appartenir à une communauté nouvelle et
croissante dans la société&amp;nbsp;actuelle. Impliquez vous librement au sein du
PGCD et démontrez votre engagement dans cet ensemble à part entière de
personnes strictement naturelles. C'est en fonction des idées primitives
de chacun ou même d’idées dérivées, qu’en effectuant l’intégrale somme
nous arriverons à un produit facteur de progrès. Et enfin nous pourrons
prendre la tangente face à l’absurdité des uns et ainsi majorer par
l’honnête esprit car nous savons que la découverte est congrue à
l’intuition. C’est bien cela que l’on nomme l’univers des possibles.&amp;nbsp;*&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;*Ensemble, formons la somme de nos différences.*&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Poulos&lt;/p&gt;
</summary></entry><entry><title>Bienvenue sur PGCD !</title><link href="/bienvenue-sur-pgcd.html" rel="alternate"></link><updated>2014-02-25T20:59:00+01:00</updated><author><name>Matlink</name></author><id>tag:,2014-02-25:bienvenue-sur-pgcd.html</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Bonjour à toi, humble visiteur !&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Je te souhaite la bienvenue sur le site du PGCD : le Parti des Geeks
Cartésiens Démocrates.&lt;/div&gt;
&lt;div class="line"&gt;Tu es libre de t'inscrire, de visiter le site, de le partager !&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Ce blog est hébergé sur un Raspberry Pi ! Alors soit indulgent par
rapport au temps de réponse !&lt;/p&gt;
&lt;p&gt;Si tu as des questions, n'hésite pas à les poser dans la section
commentaires ! Merci de ta visite !&lt;/p&gt;
</summary><category term="bienvenue"></category><category term="pgcd"></category></entry></feed>